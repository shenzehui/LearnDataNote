import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as o,a as n,b as s,e as t,d as e,r as l}from"./app.8db94880.js";const i={},u=e(`<h2 id="reslience4j-简介" tabindex="-1"><a class="header-anchor" href="#reslience4j-简介" aria-hidden="true">#</a> Reslience4j 简介</h2><blockquote><p><code>Resilience4j</code> 是 Spring Cloud Greenwich 版推荐的容错解决方案，相比<code> Hystrix</code>，Resilience4j 专为 Java8 以及函数式编程而设计。</p></blockquote><p>Resilience4j 主要提供了如下功能：</p><ol><li><p>断路器</p></li><li><p>限流</p></li><li><p>基于信号量的隔离</p></li><li><p>缓存</p></li><li><p>限时</p></li><li><p>请求重试</p></li></ol><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><h3 id="首先搭建一个简单的测试环境。" tabindex="-1"><a class="header-anchor" href="#首先搭建一个简单的测试环境。" aria-hidden="true">#</a> 首先搭建一个简单的测试环境。</h3><p>创建一个名叫 reslience4j 的 Spring Boot 工程，添加如下依赖：</p><ul><li>测试依赖</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.13.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Resilience4j 提供了很多功能，不同的功能对应不同的依赖，可以按需添加。使用断路器，则首先添加断路器的依赖</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-circuitbreaker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.13.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在测试类中编写如下代码" tabindex="-1"><a class="header-anchor" href="#在测试类中编写如下代码" aria-hidden="true">#</a> 在测试类中编写如下代码</h3><p>步骤如下：</p><ol><li>先通过 <code>CircuitBreakerRegistry.ofDefaults()</code> 获取一个 <code>CircuitBreakerRegistry</code> 实例</li><li>为 <code>CircuitBreakerConfig</code> 断路器配置类设置属性值 <ul><li>failureRateThreshold(50)：表示故障率阈值百分比，超过这个阈值，断路器就会打开</li><li>waitDurationInOpenState(Duration.ofMillis(1000))：断路器保持打开时间，在到达的设置的时间之后，断路器会进入到 half open 状态 （半打开）</li><li><code>ringBufferSizeInHalfOpenState(2)</code>， <code>ringBufferSizeInClosedState(2)</code> ：当断路器处于 half open 状态时，环形缓冲区的大小</li></ul></li><li>通过 <code>r1.circuitBreaker(&quot;marico&quot;);</code> 得到断路器对象，<code>marico</code> 是自定义断路器名称</li><li>自定义 supplier 函数，执行成功会返回&quot;hello resilience4j&quot;</li><li>使用 java8 新特性调用该函数，输出是否成功以及输出的值</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">CircuitBreakerRegistry</span> registry <span class="token operator">=</span> <span class="token class-name">CircuitBreakerRegistry</span><span class="token punctuation">.</span><span class="token function">ofDefaults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CircuitBreakerConfig</span> config <span class="token operator">=</span> <span class="token class-name">CircuitBreakerConfig</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">failureRateThreshold</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">waitDurationInOpenState</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofMillis</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">ringBufferSizeInHalfOpenState</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">ringBufferSizeInClosedState</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CircuitBreakerRegistry</span> r1 <span class="token operator">=</span> <span class="token class-name">CircuitBreakerRegistry</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CircuitBreaker</span> cb1 <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">circuitBreaker</span><span class="token punctuation">(</span><span class="token string">&quot;marico&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CheckedFunction0</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> supplier <span class="token operator">=</span> <span class="token class-name">CircuitBreaker</span><span class="token punctuation">.</span><span class="token function">decorateCheckedSupplier</span><span class="token punctuation">(</span>cb1<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;hello resilience4j&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Try</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token class-name">Try</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>supplier<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span> v <span class="token operator">+</span> <span class="token string">&quot; hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">isSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行上述代码，控制台输出如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>SLF4J: Failed to load class <span class="token string">&quot;org.slf4j.impl.StaticLoggerBinder&quot;</span><span class="token builtin class-name">.</span>
SLF4J: Defaulting to no-operation <span class="token punctuation">(</span>NOP<span class="token punctuation">)</span> logger implementation
SLF4J: See http://www.slf4j.org/codes.html<span class="token comment">#StaticLoggerBinder for further details.</span>
<span class="token boolean">true</span>
hello resilience4j hello world

Process finished with <span class="token builtin class-name">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为没有出错，所以断路器处于闭合状态</p><h3 id="手动故障测试" tabindex="-1"><a class="header-anchor" href="#手动故障测试" aria-hidden="true">#</a> 手动故障测试</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">CircuitBreakerConfig</span> config <span class="token operator">=</span> <span class="token class-name">CircuitBreakerConfig</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">failureRateThreshold</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">waitDurationInOpenState</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofMillis</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment">/*两条数据的时候就会测试故障*/</span>
            <span class="token punctuation">.</span><span class="token function">ringBufferSizeInClosedState</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CircuitBreakerRegistry</span> r1 <span class="token operator">=</span> <span class="token class-name">CircuitBreakerRegistry</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CircuitBreaker</span> cb1 <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">circuitBreaker</span><span class="token punctuation">(</span><span class="token string">&quot;javaboy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cb1<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取断路器的状态 ：CLOSE</span>
    <span class="token comment">/*当故障率超过50%就会打开*/</span>
    cb1<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cb1<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cb1<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cb1<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">CheckedFunction0</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> supplier <span class="token operator">=</span> <span class="token class-name">CircuitBreaker</span><span class="token punctuation">.</span><span class="token function">decorateCheckedSupplier</span><span class="token punctuation">(</span>cb1<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;hello resilience4j&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Try</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token class-name">Try</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>supplier<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span> v <span class="token operator">+</span> <span class="token string">&quot; hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">isSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>cb1.getState() 方法表示获取断路器的状态，由于 <code>ringBuﬀerSizeInClosedState</code> 的值为 2，表示当<code>有两条数据时才会去统计故障率</code>，所以， 上面的手动故障测试，至少调用两次<code> onError</code> ，断路器才会打开。</p></div><p>执行以上代码，控制台打印结果：</p><p><img src="https://s1.vika.cn/space/2022/11/21/43a0deb810134f588802390dc91458e3" alt="image-20221106191428379" loading="lazy"></p><h2 id="限流" tabindex="-1"><a class="header-anchor" href="#限流" aria-hidden="true">#</a> 限流</h2><h3 id="首先添加依赖" tabindex="-1"><a class="header-anchor" href="#首先添加依赖" aria-hidden="true">#</a> 首先添加依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-ratelimiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.13.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="限流测试" tabindex="-1"><a class="header-anchor" href="#限流测试" aria-hidden="true">#</a> 限流测试</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">/*限流配置*/</span>
    <span class="token class-name">RateLimiterConfig</span> config <span class="token operator">=</span> <span class="token class-name">RateLimiterConfig</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">/*阈值刷新时间*/</span>
        <span class="token punctuation">.</span><span class="token function">limitRefreshPeriod</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofMillis</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">limitForPeriod</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">//阈值刷新的频次</span>
        <span class="token punctuation">.</span><span class="token function">timeoutDuration</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofMinutes</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//限流之后的冷却时间</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">RateLimiter</span> rateLimiter <span class="token operator">=</span> <span class="token class-name">RateLimiter</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;javaboy&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CheckedRunnable</span> checkedRunnable <span class="token operator">=</span> <span class="token class-name">RateLimiter</span><span class="token punctuation">.</span><span class="token function">decorateCheckedRunnable</span><span class="token punctuation">(</span>rateLimiter<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Try</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>checkedRunnable<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">andThenTry</span><span class="token punctuation">(</span>checkedRunnable<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">andThenTry</span><span class="token punctuation">(</span>checkedRunnable<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">andThenTry</span><span class="token punctuation">(</span>checkedRunnable<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">onFailure</span><span class="token punctuation">(</span>t<span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">说明</p><p>以上代码通过对限流的配置，表示每秒处理两个请求。</p></div><h3 id="测试结果" tabindex="-1"><a class="header-anchor" href="#测试结果" aria-hidden="true">#</a> 测试结果</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Sun Nov 06 <span class="token number">19</span>:18:39 CST <span class="token number">2022</span>
Sun Nov 06 <span class="token number">19</span>:18:39 CST <span class="token number">2022</span>
Sun Nov 06 <span class="token number">19</span>:18:40 CST <span class="token number">2022</span>
Sun Nov 06 <span class="token number">19</span>:18:40 CST <span class="token number">2022</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="请求重试" tabindex="-1"><a class="header-anchor" href="#请求重试" aria-hidden="true">#</a> 请求重试</h2><h3 id="首先第一步还是加依赖" tabindex="-1"><a class="header-anchor" href="#首先第一步还是加依赖" aria-hidden="true">#</a> 首先第一步还是加依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-retry<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.13.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="请求重试测试" tabindex="-1"><a class="header-anchor" href="#请求重试测试" aria-hidden="true">#</a> 请求重试测试</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">RetryConfig</span> config <span class="token operator">=</span> <span class="token class-name">RetryConfig</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">/*配置重试次数*/</span>
        <span class="token punctuation">.</span><span class="token function">maxAttempts</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token comment">/*重试间隔时间*/</span>
        <span class="token punctuation">.</span><span class="token function">waitDuration</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//ofMillis 毫秒数    ofSeconds 秒数</span>
        <span class="token comment">/*执行过程中指定抛出异常，重试*/</span>
        <span class="token punctuation">.</span><span class="token function">retryExceptions</span><span class="token punctuation">(</span><span class="token class-name">RuntimeException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Retry</span> retry <span class="token operator">=</span> <span class="token class-name">Retry</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;javaboy&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Retry</span><span class="token punctuation">.</span><span class="token function">decorateRunnable</span><span class="token punctuation">(</span>retry<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>count<span class="token operator">++</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>代码说明：<code>retryExceptions</code> 指定重试的条件，这里表示若抛出 RuntimeException 运行时异常将会进行重试，且最大重试次数为 5，每一秒后进行重试，直至超过最大重试次数或者不抛出异常</p></blockquote><h3 id="测试结果-1" tabindex="-1"><a class="header-anchor" href="#测试结果-1" aria-hidden="true">#</a> 测试结果</h3><p><img src="https://s1.vika.cn/space/2022/11/21/74b286bff44844fba501853a260149aa" alt="image-20221106192446046" loading="lazy"></p><h2 id="结合微服务使用" tabindex="-1"><a class="header-anchor" href="#结合微服务使用" aria-hidden="true">#</a> 结合微服务使用</h2><h3 id="retry-请求重试" tabindex="-1"><a class="header-anchor" href="#retry-请求重试" aria-hidden="true">#</a> Retry 请求重试</h3><ul><li>首先创建一个 reslience4j-2 的 springboot 工程，添加如下依赖</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-spring-boot2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-circuitbreaker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-ratelimiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-bulkhead<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-timelimiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">说明</p><p><code>resilience4j-spring-boot2 </code>中包含了 Resilience4j 的所有功能，但是没有配置的功能无法使用，需要将之从依赖中剔除掉。</p></div><ul><li>接下来，在 application.yml 中配置 retry</li></ul><blockquote><p>这里主要定义了一个名叫 retryA 的重试策略</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">resilience4j</span><span class="token punctuation">:</span>
  <span class="token key atrule">retry</span><span class="token punctuation">:</span>
    <span class="token key atrule">retry-aspect-order</span><span class="token punctuation">:</span> <span class="token number">399</span> <span class="token comment"># 表示Retry的优先级</span>
    <span class="token key atrule">backends</span><span class="token punctuation">:</span>
      <span class="token key atrule">retryA</span><span class="token punctuation">:</span>  <span class="token comment">#自定义重试名称</span>
        <span class="token key atrule">maxRetryAttempts</span><span class="token punctuation">:</span> <span class="token number">5</span> <span class="token comment"># 重试的次数</span>
        <span class="token key atrule">waitDuration</span><span class="token punctuation">:</span> <span class="token number">500</span> <span class="token comment"># 重试等待时间</span>
        <span class="token key atrule">exponentialBackoffMultiplier</span><span class="token punctuation">:</span> <span class="token number">1.1</span> <span class="token comment">#间隔乘数 </span>
        <span class="token key atrule">retryExecptions</span><span class="token punctuation">:</span>
         <span class="token punctuation">-</span> java.lang.RuntimeException
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> resilience4j
<span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5000</span>
<span class="token key atrule">eureka</span><span class="token punctuation">:</span>
  <span class="token key atrule">client</span><span class="token punctuation">:</span>
    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>
      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>1111/eureka
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>然后，创建测试 RestTemplate 和 HelloService</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Resilience4j2Application</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Resilience4j2Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token class-name">RestTemplate</span> <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@Retry</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;retryA&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:1113/hello&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>@Retry 注解中的 name 属性表示要使用的重试策略</p></blockquote><ul><li>最后，在 controller 中进行调用</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">HelloService</span> helloService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> helloService<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试</li></ul><p>修改 provider 中的接口：直接抛出运行时异常</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 	<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;自定义错误&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,56),r={href:"http://localhost:5000/hello",target:"_blank",rel:"noopener noreferrer"},k=e(`<p><img src="https://s1.vika.cn/space/2022/11/21/4b91f9faf9e943928a52c9a015c2fe81" alt="image-20221106195134394" loading="lazy"></p><p><strong>由此可以看出 resilience4j 服务连续尝试请求了 5 次！</strong></p><h3 id="circuitbreaker-服务降级" tabindex="-1"><a class="header-anchor" href="#circuitbreaker-服务降级" aria-hidden="true">#</a> CircuitBreaker 服务降级</h3><ul><li>首先从依赖中删除排除 CircuitBreaker</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-spring-boot2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--此版本与SpringBoot版本相对应--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--                &lt;exclusion&gt;--&gt;</span>
        <span class="token comment">&lt;!--                    &lt;groupId&gt;io.github.resilience4j&lt;/groupId&gt;--&gt;</span>
        <span class="token comment">&lt;!--                    &lt;artifactId&gt;resilience4j-circuitbreaker&lt;/artifactId&gt;--&gt;</span>
        <span class="token comment">&lt;!--                &lt;/exclusion&gt;--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-ratelimiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-bulkhead<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-timelimiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>然后在 application.yml 中进行配置</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">resilience4j</span><span class="token punctuation">:</span>
  <span class="token key atrule">retry</span><span class="token punctuation">:</span>
    <span class="token key atrule">retry-aspect-order</span><span class="token punctuation">:</span> <span class="token number">399</span> <span class="token comment"># 表示Retry的优先级</span>
    <span class="token key atrule">backends</span><span class="token punctuation">:</span>
      <span class="token key atrule">retryA</span><span class="token punctuation">:</span>  <span class="token comment">#自定义重试名称</span>
        <span class="token key atrule">maxRetryAttempts</span><span class="token punctuation">:</span> <span class="token number">5</span> <span class="token comment"># 重试的次数</span>
        <span class="token key atrule">waitDuration</span><span class="token punctuation">:</span> <span class="token number">500</span> <span class="token comment"># 重试等待时间</span>
        <span class="token key atrule">exponentialBackoffMultiplier</span><span class="token punctuation">:</span> <span class="token number">1.1</span> <span class="token comment">#间隔乘数</span>
        <span class="token key atrule">retryExecptions</span><span class="token punctuation">:</span>
         <span class="token punctuation">-</span> java.lang.RuntimeException
  <span class="token key atrule">circuitbreaker</span><span class="token punctuation">:</span>
    <span class="token key atrule">instances</span><span class="token punctuation">:</span>
      <span class="token key atrule">cbA</span><span class="token punctuation">:</span>
        <span class="token key atrule">ringBufferSizeInClosedState</span><span class="token punctuation">:</span> <span class="token number">5</span>
        <span class="token key atrule">ringBufferSizeInHalfOpenState</span><span class="token punctuation">:</span> <span class="token number">3</span>
        <span class="token key atrule">waitInterval</span><span class="token punctuation">:</span> <span class="token number">5000</span>
        <span class="token key atrule">recordsException</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> org.springframeword.web.client.HttpServerErrorException <span class="token comment"># 服务端报错就自动降级</span>
    <span class="token key atrule">circuit-breaker-aspect-order</span><span class="token punctuation">:</span> <span class="token number">398</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置完成后，用 <code>@CircuitBreakder </code>注解标记降级方法：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token comment">//@Retry(name = &quot;retryA&quot;)</span>
<span class="token annotation punctuation">@CircuitBreaker</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;cbA&quot;</span><span class="token punctuation">,</span>fallbackMethod <span class="token operator">=</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:1113/hello&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">注意</p><p><code>@CircuitBreaker</code> 注解中的 <code>name </code>属性用来指定 circuitbreaker 配置，<code>fallbackMethod</code> 属性用来指定服务降级的方法，<strong>需要注意的是，服务降级方法中，要添加异常参数</strong>。</p></div>`,10),d={href:"http://localhost:5000/hello",target:"_blank",rel:"noopener noreferrer"},v=e(`<p><img src="https://s1.vika.cn/space/2022/11/21/5d096e50f1294cc28be44a6c76baa18b" alt="image-20221106195717111" loading="lazy"></p><h3 id="ratelimiter-限流" tabindex="-1"><a class="header-anchor" href="#ratelimiter-限流" aria-hidden="true">#</a> RateLimiter 限流</h3><ul><li><code>RateLimiter </code>作为限流工具，主要在服务端使用，用来保护服务端的接口。首先在 provider 中添加 RateLimiter 依赖（要排除 resilience4j-ratelimiter 依赖）</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-spring-boot2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-circuitbreaker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--                &lt;exclusion&gt;--&gt;</span>
        <span class="token comment">&lt;!--                    &lt;groupId&gt;io.github.resilience4j&lt;/groupId&gt;--&gt;</span>
        <span class="token comment">&lt;!--                    &lt;artifactId&gt;resilience4j-ratelimiter&lt;/artifactId&gt;--&gt;</span>
        <span class="token comment">&lt;!--                &lt;/exclusion&gt;--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-bulkhead<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-timelimiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>接下来，在 provider 的 application.properties 配置文件中，去配置 RateLimiter</li></ul><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># 这里配置每秒钟处理一个请求</span>
<span class="token key attr-name">resilience4j.ratelimiter.limiters.rlA.limit-for-period</span><span class="token punctuation">=</span><span class="token value attr-value">1</span>
<span class="token comment"># 刷新时间1s</span>
<span class="token key attr-name">resilience4j.ratelimiter.limiters.rlA.limit-refresh-period</span><span class="token punctuation">=</span><span class="token value attr-value">1s</span>
<span class="token comment"># 冷却时间</span>
<span class="token key attr-name">resilience4j.ratelimiter.limiters.rlA.timeout-duration</span><span class="token punctuation">=</span><span class="token value attr-value">1s</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>为了查看请求效果，在 provider 的 HelloController 中打印每一个请求的时间</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@RateLimiter</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;rlA&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string">&quot;hello marico：&quot;</span> <span class="token operator">+</span> port<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>这里通过<code>@RateLimiter</code>注解标记该接口限流，属性 name 是 properties 中配置的限流名。</p></div><ul><li>配置完成后，重启provider，然后，在客户端模拟多个请求，查看限流效果</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">/*模拟RateLimiter请求*/</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:1113/hello&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),m={href:"http://localhost:5000/hello%EF%BC%8C%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%89%93%E5%8D%B0%E5%A6%82%E4%B8%8B%EF%BC%9A",target:"_blank",rel:"noopener noreferrer"},g=e(`<p><img src="https://s1.vika.cn/space/2022/11/21/fddeef6a32134cbd9e13189634c2eece" alt="image-20221106200704472" loading="lazy"></p><p><strong>由此我们可以发现请求每秒钟后得到一次响应，限流起作用了！</strong></p><h2 id="服务监控" tabindex="-1"><a class="header-anchor" href="#服务监控" aria-hidden="true">#</a> 服务监控</h2><p>微服务由于服务数量众多，所以出故障的概率很大，这种时候不能单纯的依靠人肉运维。</p><p>早期的 Spring Cloud 中，服务监控主要使用 <code>Hystrix Dashboard</code>，集群数据库监控使用 <code>Turbine</code>。在 <code>Greenwich</code> 版本中，官方建议监控工具使用 <code>Micrometer</code>。</p><p>Micrometer：</p><ol><li><p>提供了度量指标，例如 <code>timers、counters</code></p></li><li><p>一揽子开箱即用的解决方案，例如<code>缓存、类加载器、垃圾收集</code>等等</p></li></ol><p>新建一个名为 micrometer 的项目，添加 Actuator 依赖。项目创建成功后，添加如下配置，开启所有端点：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">management.endpoints.web.exposure.include</span><span class="token punctuation">=</span><span class="token value attr-value">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后就可以在浏览器查看项目的各项运行数据，但是这些数据都是 JSON 格式。</p><p><img src="https://s1.vika.cn/space/2022/11/21/d45f87af1f6e4195ac6f130db163c7a6" alt="image-20220707193406719" loading="lazy"></p><p>我们需要一个可视化工具来展示这些 JSON 数据。这里主要和大家介绍 Prometheus（普罗米修斯）。</p><h3 id="下载-prometheus" tabindex="-1"><a class="header-anchor" href="#下载-prometheus" aria-hidden="true">#</a> 下载 Prometheus</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://github.com/prometheus/prometheus/releases/download/v2.16.0/prometheus- <span class="token number">2.16</span>.0.linux-amd64.tar.gz
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> prometheus-2.16.0.linux-amd64.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>解压完成后，配置一下数据路径和要监控的服务地址</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> prometheus-2.16.0.linux-amd64/ 
<span class="token function">vi</span> prometheus.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://s1.vika.cn/space/2022/11/21/1d2a1e73f721405b90daf0972a2a47cc" alt="image-20220707194549799" loading="lazy"></p><h3 id="与-spring-boot-整合" tabindex="-1"><a class="header-anchor" href="#与-spring-boot-整合" aria-hidden="true">#</a> 与 Spring Boot 整合</h3><p>将 Prometheus 整合到 Spring Boot 项目中。首先加依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.micrometer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>micrometer-registry-prometheus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>然后在 application.properties 配置中，添加 Prometheus 配置</li></ul><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">management.endpoints.web.exposure.include</span><span class="token punctuation">=</span><span class="token value attr-value">*</span>

<span class="token key attr-name">management.endpoint.prometheus.enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token key attr-name">management.metrics.export.prometheus.enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token key attr-name">management.endpoint.metrics.enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>可输入actuator地址查看信息</li></ul><p><img src="https://s1.vika.cn/space/2022/11/21/107a91b8c5c444d1a7c239fd4dcfc1cf" alt="image-20220707195346282" loading="lazy"></p><h3 id="启动-prometheus" tabindex="-1"><a class="header-anchor" href="#启动-prometheus" aria-hidden="true">#</a> 启动 Prometheus</h3><p>接下来启动 Prometheus，启动命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./prometheus <span class="token parameter variable">--config.file</span><span class="token operator">=</span>prometheus.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果看到 <code>Server is ready to receive web requests.</code> 字样，说明已经启动成功了</p>`,28),b={href:"http://192.168.88.128:9090/graph%EF%BC%88%E8%BF%99%E9%87%8C%E6%88%91%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%9C%B0%E5%9D%80%E6%98%AF",target:"_blank",rel:"noopener noreferrer"},h=n("p",null,[n("img",{src:"https://s1.vika.cn/space/2022/11/21/b8dde6f0cb2047748a382759c172c021",alt:"image-20220707201935911",loading:"lazy"})],-1),f=n("h3",{id:"grafana-下载和启动",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#grafana-下载和启动","aria-hidden":"true"},"#"),s(" Grafana 下载和启动")],-1),y={href:"https://grafana.com/grafana/download?platform=linux",target:"_blank",rel:"noopener noreferrer"},x=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://dl.grafana.com/oss/release/grafana-6.6.1-1.x86_64.rpm
<span class="token function">sudo</span> yum <span class="token function">install</span> grafana-6.6.1-1.x86_64.rpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start grafana-server.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),j={href:"http://192.168.88.128:3000/login%EF%BC%8C%E8%BF%99%E9%87%8C%E6%88%91%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%9C%B0%E5%9D%80%E6%98%AF",target:"_blank",rel:"noopener noreferrer"},I=e('<p><img src="https://s1.vika.cn/space/2022/11/21/914bb21d265148508e05f3bfb73f8731" alt="" loading="lazy"></p><p>默认账号密码 admin admin</p><ul><li>登录成功后</li></ul><p><img src="https://s1.vika.cn/space/2022/11/21/de2c3f91f3e34db481dd8f53d5999ddb" alt="" loading="lazy"></p><ul><li>可以看到创建流程</li></ul><p><img src="https://s1.vika.cn/space/2022/11/21/757ea684035045978e125c01896d9f2c" alt="" loading="lazy"></p><ul><li>添加数据源</li></ul><p><img src="https://s1.vika.cn/space/2022/11/21/0a7ab95479ec4247a3892a4edfc2cda2" alt="" loading="lazy"></p><ul><li>填写 Prometheus 端口 点击&#39;Save &amp; Test&#39;</li></ul><p><img src="https://s1.vika.cn/space/2022/11/21/18a356cab4084eb6aa8187191444ba13" alt="" loading="lazy"></p><ul><li>添加 DashBoard</li></ul><p><img src="https://s1.vika.cn/space/2022/11/21/1f61040a83a946b6b2ce1a5d85031342" alt="" loading="lazy"></p><ul><li>Add Query</li></ul><p><img src="https://s1.vika.cn/space/2022/11/21/108c18ad0d594bf6a86be15b278f623f" alt="" loading="lazy"></p>',14);function w(S,R){const a=l("ExternalLinkIcon");return c(),o("div",null,[u,n("p",null,[s("分别启动 eureka、provider 和 resilience4j 服务，访问 "),n("a",r,[s("http://localhost:5000/hello"),t(a)])]),k,n("ul",null,[n("li",null,[s("测试，浏览器访问 "),n("a",d,[s("http://localhost:5000/hello"),t(a)])])]),v,n("ul",null,[n("li",null,[s("测试，浏览器访问 "),n("a",m,[s("http://localhost:5000/hello，控制台打印如下："),t(a)])])]),g,n("p",null,[s("启动成功后，浏览器输入"),n("a",b,[s("http://192.168.88.128:9090/graph（这里我的虚拟机地址是"),t(a)]),s(" 192.168.88.128）查看 Prometheus 数据信息。")]),h,f,n("p",null,[n("a",y,[s("https://grafana.com/grafana/download?platform=linux"),t(a)])]),x,n("p",null,[s("访问 "),n("a",j,[s("http://192.168.88.128:3000/login，这里我的虚拟机地址是"),t(a)]),s(" 192.168.88.128。")]),I])}const q=p(i,[["render",w],["__file","resilience4j.html.vue"]]);export{q as default};
