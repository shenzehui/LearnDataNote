import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as n,e as i}from"./app.2c190525.js";const r={},t=i('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><blockquote><p>Spring Cloud Ribbon 是一个基于 HTTP 和 TCP 的客户端负载均衡工具，它基于 Netfilx Ribbon 实现。通过 Spring Cloud 的封装，可以让我们轻松地将面向服务的 REST 的模板请求自动转化成客户端负载均衡的服务调用。Spring Cloud Ribbon 虽然只是一个工具类框架，它不像服务注册中、配置中心、API 网关那样需要独立部署，但是它几乎存在于每一个 Spring Cloud 构建的微服务和基础设施中。所以，对 Spring Cloud Ribbon 的理解和使用，对于我们使用 Spring Cloud 来构建微服务非常重要</p></blockquote><h3 id="客户端负载均衡" tabindex="-1"><a class="header-anchor" href="#客户端负载均衡" aria-hidden="true">#</a> 客户端负载均衡</h3><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/1.png" alt="1" loading="lazy"></p><p>当客户端发送请求到负载均衡设备的时候，该设备按某种算法（比如线性轮询、按权重负载、按流量负载等）从维护的可用服务端清单中取出一台服务端的地址，然后进行转发。</p>',5),a=[t];function d(c,l){return o(),n("div",null,a)}const p=e(r,[["render",d],["__file","ribbon.html.vue"]]);export{p as default};
