import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as r,c as e,a as n,b as o,d as l,e as t}from"./app-f37b2341.js";const p={},a=t('<h2 id="计算机网络在信息时代的作用" tabindex="-1"><a class="header-anchor" href="#计算机网络在信息时代的作用" aria-hidden="true">#</a> 计算机网络在信息时代的作用</h2><ul><li>计算机网络已由一种<strong>通信基础设施</strong>发展成为一种重要的<strong>信息服务基础设施</strong></li><li>计算机网络已经像水，电，煤气这些基础设施一样，成为我们<strong>生活中不可或缺</strong>的一部分</li></ul><h3 id="我国互联网发展状况" tabindex="-1"><a class="header-anchor" href="#我国互联网发展状况" aria-hidden="true">#</a> 我国互联网发展状况</h3>',3),h={href:"http://www.cnnic.net.cn/",target:"_blank",rel:"noopener noreferrer"},d=t('<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-762604e225775be9.png" alt="img" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-67cef530fb12b5d9.png" alt="img" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-dbf8fb050bcdbf8b.png" alt="img" loading="lazy"></p><h2 id="因特网概述" tabindex="-1"><a class="header-anchor" href="#因特网概述" aria-hidden="true">#</a> 因特网概述</h2><h3 id="网络、互连网-互联网-和因特网" tabindex="-1"><a class="header-anchor" href="#网络、互连网-互联网-和因特网" aria-hidden="true">#</a> 网络、互连网（互联网）和因特网</h3><p>网络：网络（Network）由若干**结点（Node）<strong>和连接这些结点的</strong>链路（Link）**组成。</p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-4fcd41d225b201be.png" alt="img" loading="lazy"></p><p>互连网（互联网）：多个网络通过路由器互连起来，这样就构成了一个覆盖范围更大的网络，即互连网（互联网）。因此，互联网又称为“网络的网络（Network of Networks）”。</p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-ee181b01ca4c6f8e.png" alt="img" loading="lazy"></p><blockquote><p><strong>internet 与 Internet 的区别</strong></p><ul><li><p><strong>internet (互联网或互连网)<strong>是一个通用名词，它泛指</strong>多个计算机网络互连而成的网络</strong>。在这些网络之间的通信协议可以是任意的。</p></li><li><p><strong>Internet (因特网)则是一个专用名词</strong>，它指<strong>当前全球最大的、开放的、由众多网络互连而成的特定计算机网络</strong>，它采用 TCP/IP 协议族作为通信的规则，其前身是美国的 ARPANET。</p></li></ul><p><strong>任意把几个计算机网络互连起来（不管采用什么协议），并能够相互通信，这样构成的是一个互连网(internet) ，而不是互联网(Internet)。</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-cb6c0dd7a1f70e3e.png" alt="img" loading="lazy"></p><h3 id="因特网发展的三个阶段" tabindex="-1"><a class="header-anchor" href="#因特网发展的三个阶段" aria-hidden="true">#</a> 因特网发展的三个阶段</h3><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-0ee6522bfae940b5.png" alt="img" loading="lazy"></p><p><strong>因特网服务提供者 <code>ISP</code> (<code>I</code>nternet <code>S</code>ervice <code>P</code>rovider)</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-332e68bc46bc59ab.png" alt="img" loading="lazy"></p><blockquote><p>普通用户是如何接入到因特网的呢？</p><p>答：<strong>通过 ISP 接入因特网</strong></p><p>ISP可以从因特网管理机构申请到成块的IP地址，同时拥有通信线路以及路由器等联网设备。任何机构和个人只需缴纳费用，就可从 <strong>ISP 的得到所需要的 IP 地址</strong>。</p><p>**因为因特网上的主机都必须有IP地址才能进行通信，这样就可以通过该 ISP 接入</p></blockquote><p><strong>中国的三大 <code>ISP</code>：中国电信，中国联通和中国移动</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-ce38a42cfcab9872.png" alt="img" loading="lazy"></p><p><strong>基于 ISP 的三层结构的因特网</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-1ccdf3defcff4ef1.png" alt="img" loading="lazy"></p><blockquote><p>一旦某个用户能够接入到因特网，那么他也可以成为一个 ISP ，所需要做的就是购买一些如调制解调器或路由器这样的设备，让其他用户可以和他相连</p></blockquote><h2 id="因特网的标准化工作" tabindex="-1"><a class="header-anchor" href="#因特网的标准化工作" aria-hidden="true">#</a> 因特网的标准化工作</h2><ul><li>因特网的标准化工作对因特网的发展起到了非常重要的作用。</li><li>因特网在指定其标准上的一个很大的特点是<strong>面向公众。</strong><ul><li>因特网所有的 <strong>RFC</strong> (Request For Comments)技术文档都可从因特网上免费下载；</li><li>任何人都可以随时用电子邮件发表对某个文档的意见或建议。</li></ul></li><li>**因特网协会 ISOC **是一个国际性组织，它负责对因特网进行全面管理，以及在世界范围内促进其发展和使用。 <ul><li>因特网体系结构委员会 IAB，负责管理因特网有关协议的开发；</li><li>因特网工程部 IETF，负责研究中短期工程问题，主要针对协议的开发和标准化；</li><li>因特网研究部 IRTF，从事理论方面的研究和开发一些需要长期考虑的问题。</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/image-20221029151058964.png" alt="image-20221029151058964" loading="lazy"></p><ul><li><p>制订因特网的正式标准要经过一下<strong>4个阶段</strong>：</p><p>1、因特网草案（在这个阶段还不是RFC文档）</p><p>2、建议标准（从这个阶段开始就成为RFC文档）</p><p>3、草案标准</p><p>4、因特网标准</p></li></ul><h2 id="因特网的组成" tabindex="-1"><a class="header-anchor" href="#因特网的组成" aria-hidden="true">#</a> 因特网的组成</h2><ul><li><p>边缘部分</p><p>由所有连接在因特网上的<strong>主机</strong>组成（台式电脑，大型服务器，笔记本电脑，平板，智能手机等）。这部分是<strong>用户直接使用</strong>的，用来进行<strong>通信</strong>（传送数据、音频或视频）和<strong>资源共享</strong>。</p></li><li><p>核心部分</p><p>由<strong>大量网络</strong>和连接这些网络的<strong>路由器</strong>组成。这部分是<strong>为边缘部分提供服务</strong>的（提供连通性和交换）。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/image-20221029151132284.png" alt="image-20221029151132284" loading="lazy"></p><blockquote><p>路由器是一种专用计算机，但我们不称它为主机，路由器是实现分组交换的关键构建，其任务是转发收到的分组，这是网络核心最重要的部分。</p><p>处在互联网边缘的部分就是连接在互联网上的所有的主机。这些主机又称为<strong>端系统 (end system)</strong>。</p><p><strong>端系统在功能上可能有很大的差别：</strong></p><ol><li>小的端系统可以是一台普通个人电脑，具有上网功能的智能手机，甚至是一个很小的网络摄像头。</li><li>大的端系统则可以是一台非常昂贵的大型计算机。</li><li>端系统的拥有者可以是个人，也可以是单位（如学校、企业、政府机关等），当然也可以是某个 ISP。</li></ol></blockquote><p><strong>补充：</strong></p><p><strong>端系统之间通信的含义</strong></p><p>“主机 A 和主机 B 进行通信”实际上是指：“运行在主机 A 上的某个程序和运行在主机 B 上的另一个程序进行通信”。<strong>即“主机</strong> <strong>A</strong> <strong>的某个进程和主机</strong> <strong>B</strong> <strong>上的另一个进程进行通信”。简称为“计算机之间通信”。</strong></p><p>端系统之间的通信方式通常可划分为两大类：</p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/image-20221029151142982.png" alt="image-20221029151142982" loading="lazy"></p><p><strong>客户-服务器方式：</strong></p><ul><li>客户 (client) 和服务器 (server) 都是指通信中所涉及的两个应用进程。</li><li>客户 - 服务器方式所描述的是进程之间服务和被服务的关系。</li><li>客户是服务的请求方，服务器是服务的提供方。</li></ul><blockquote><p><strong>服务请求方和服务提供方都要使用网络核心部分所提供的服务。</strong></p></blockquote><p><strong>对等连接方式：</strong></p><ul><li><strong>对等连接</strong> (peer-to-peer，简写为 <strong>P2P</strong> ) 是指两个主机在通信时并不区分哪一个是服务请求方还是服务提供方。</li><li>只要两个主机都运行了对等连接软件 ( P2P 软件) ，它们就可以进行<strong>平等的、对等连接通信</strong>。</li><li>双方都可以下载对方已经存储在硬盘中的共享文档。</li></ul><h2 id="三种交换方式" tabindex="-1"><a class="header-anchor" href="#三种交换方式" aria-hidden="true">#</a> 三种交换方式</h2><p>网络核心部分是互联网中最复杂的部分。</p><p>网络中的核心部分要向网络边缘中的大量主机提供连通性，使边缘部分中的任何一个主机都能够向其他主机通信（即传送或接收各种形式的数据）。</p><p>在网络核心部分起特殊作用的是<strong>路由器</strong>(router)。</p><p><strong>路由器</strong>是实现<strong>分组交换</strong> (packet switching) 的关键构件，其任务是<strong>转发</strong>收到的分组，这是网络核心部分最重要的功能。</p><h3 id="电路交换-circuit-switching" tabindex="-1"><a class="header-anchor" href="#电路交换-circuit-switching" aria-hidden="true">#</a> 电路交换（Circuit Switching）</h3><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-cbb94cf7d6bc6f8b.png" alt="img" loading="lazy"></p><blockquote><p>传统两两相连的方式，当电话数量很多时，电话线也很多，就很不方便</p><p>所以要使得每一部电话能够很方便地和另一部电话进行通信，就应该使用一个<strong>中间设备</strong>将这些电话连接起来，这个中间设备就是<strong>电话交换机</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-7ad293b2ca19158b.png" alt="img" loading="lazy"></p><ul><li><p>电话交换机接通电话线的方式称为电路交换；</p></li><li><p>从通信资源的分配角度来看，交换（Switching）就是按照某种方式动态地分配传输线路的资源；</p></li><li><p>电路交换的三个步骤：</p></li></ul><ol><li><p>建立连接（分配通信资源）</p></li><li><p>通话（一直占用通信资源）</p></li><li><p>释放连接（归还通信资源</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-acb87df045723236.png" alt="img" loading="lazy"></p><blockquote><p>当使用电路交换来传送计算机数据时，其线路的传输效率往往很低。</p><p>这是因为计算机数据是突发式地出现在传输线路上的。</p><p>所以计算机通常采用的是<strong>分组交换</strong>，而不是线路交换</p></blockquote><h3 id="分组交换-packet-switching" tabindex="-1"><a class="header-anchor" href="#分组交换-packet-switching" aria-hidden="true">#</a> 分组交换（Packet Switching）</h3><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-c57bf61052cb33f0.png" alt="img" loading="lazy"></p><blockquote><p>通常我们把表示<strong>该消息的整块数据</strong>成为一个<strong>报文</strong>。</p><p>在发送报文之前，先把较长的报文划分成一个个更小的<strong>等长数据段</strong>，在每一个数据段前面。加上一些由必<strong>要的控制信息组成的首部</strong>后，就构成一个分组，也可简称为“包”，相应地，首部也可称为“包头”。</p><p>首部包含了<strong>分组的目的地址</strong></p><p>分组从源主机到目的主机，可走不同的路径。</p></blockquote><p>发送方</p><ul><li>构造分组</li><li>发送分组</li></ul><p>路由器</p><ul><li>缓存分组</li><li>转发分组</li><li>简称为<code>分组转发</code></li></ul><blockquote><p>在路由器中的输入和输出端口之间没有直接连线。</p><p>路由器处理分组的过程是：</p><ol><li>把收到的分组先<strong>放入缓存（暂时存储）；</strong></li><li><strong>查找转发表</strong>，找出到某个目的地址应从哪个端口转发；</li><li>把分组送到适当的端口<strong>转发</strong>出去。</li></ol></blockquote><p>接收方</p><ul><li>接收分组</li><li>还原报文</li></ul><h3 id="报文交换-message-switching" tabindex="-1"><a class="header-anchor" href="#报文交换-message-switching" aria-hidden="true">#</a> 报文交换（Message Switching）</h3><p>报文交换中的交换结点也采用存储转发方式，但报文交换对报文的大小没有限制，这就要求交换结点需要较大的缓存空间。报文交换主要用于早期的电报通信网，现在较少使用，<strong>通常被较先进的分组交换方式所取代</strong>。</p><h3 id="三种交换方式的对比" tabindex="-1"><a class="header-anchor" href="#三种交换方式的对比" aria-hidden="true">#</a> 三种交换方式的对比</h3><blockquote><p>假设A，B，C，D是分组传输路径所要经过的4个结点交换机，纵坐标为时间</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-e655a213714d1871.png" alt="img" loading="lazy"></p><p>分析：</p><p>电路交换：</p><ul><li>通信之前首先要建立连接；连接建立好之后，就可以使用已建立好的连接进行数据传送；数据传送后，需释放连接，以归还之前建立连接所占用的通信线路资源。</li><li>一旦建立连接，中间的各结点交换机就是直通形式的，比特流可以直达终点；</li></ul><p>报文交换：</p><ul><li>可以随时发送报文，而不需要事先建立连接；整个报文先传送到相邻结点交换机，全部存储下来后进行查表转发，转发到下一个结点交换机。</li><li>整个报文需要在各结点交换机上进行存储转发，由于不限制报文大小，因此需要各结点交换机都具有较大的缓存空间。</li></ul><p>分组交换：</p><ul><li>可以随时发送分组，而不需要事先建立连接。构成原始报文的一个个分组，依次在各结点交换机上存储转发。各结点交换机在发送分组的同时，还缓存接收到的分组。</li><li>构成原始报文的一个个分组，在各结点交换机上进行存储转发，相比报文交换，减少了转发时延，还可以避免过长的报文长时间占用链路，同时也有利于进行差错控制。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-c56f91f290cbc92b.png" alt="img" loading="lazy"></p><h2 id="计算机网络的定义和分类" tabindex="-1"><a class="header-anchor" href="#计算机网络的定义和分类" aria-hidden="true">#</a> 计算机网络的定义和分类</h2><h3 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h3><ul><li>计算机网络的精确定义并未统一</li><li>计算机网络的最简单的定义是：一些<strong>互</strong>相<strong>连</strong>接的、<strong>自治</strong>的计算机的<strong>集合</strong>。 <ul><li>互连：是指计算机之间可以通过有线或无线的方式进行数据通信；</li><li>自治：是指独立的计算机，他有自己的硬件和软件，可以单独运行使用；</li><li>集合：是指至少需要两台计算机；</li></ul></li><li>计算机网络的较好的定义是：计算机网络主要是由一些<strong>通用的，可编程的硬件（一定包含有中央处理机CPU）互连</strong>而成的，而这些硬件并非专门用来实现某一特定目的（例如，传送数据或视频信号）。这些可编程的硬件能够用来<strong>传送多种不同类型的数据</strong>，并能<strong>支持广泛的和日益增长的应用</strong>。 <ul><li>计算机网络所连接的硬件，并不限于一般的计算机，而是包括了智能手机等智能硬件。</li><li>计算机网络并非专门用来传送数据，而是能够支持很多种的应用（包括今后可能出现的各种应用）。</li></ul></li></ul><h3 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h3><p><strong>按交换技术分类：</strong></p><ul><li>电路交换网络</li><li>报文交换网络</li><li>分组交换网络</li></ul><p><strong>按使用者分类：</strong></p><ul><li>公用网</li><li>专用网</li></ul><p><strong>按传输介质分类：</strong></p><ul><li>有线网络</li><li>无线网络</li></ul><p><strong>按覆盖范围分类：</strong></p><ul><li>广域网WAN（Wide Area Network）</li></ul><p>作用范围通常为几十到几千公里，因而有时也称为远程网（long haul network）。广域网是互联网的核心部分，其任务是通过长距离（例如，跨越不同的国家）运送主机所发送的数据。</p><ul><li>城域网MAN</li></ul><p>作用范围一般是一个城市，可跨越几个街区甚至整个城市</p><ul><li>局域网LAN</li></ul><p>一般用微型计算机或工作站通过高速通信线路相连（速率通常在 10 Mbit/s 以上），但地理上范围较小（1 km 左右）</p><ul><li>个域网PAN</li></ul><p>就是在个人工作的地方把个人使用的电子设备用无线技术连接起来的网络。</p><p><strong>按拓扑结构分类：</strong></p><ul><li>总线型网络</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-4ed63e74d9ced719.png" alt="img" loading="lazy"></p><ul><li>星型网络</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/image-20221029154547424.png" alt="image-20221029154547424" loading="lazy"></p><ul><li>环形网络</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-ca133aaaf8fe8659.png" alt="img" loading="lazy"></p><ul><li>网状型网络</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-d0d30cddc7356396.png" alt="img" loading="lazy"></p><hr><h2 id="计算机网络的性能指标" tabindex="-1"><a class="header-anchor" href="#计算机网络的性能指标" aria-hidden="true">#</a> 计算机网络的性能指标</h2><h3 id="速率" tabindex="-1"><a class="header-anchor" href="#速率" aria-hidden="true">#</a> 速率</h3><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-ba6c4e627a62c05e.png" alt="" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-0c0d70a808407ca2.png" alt="img" loading="lazy"></p><h3 id="带宽" tabindex="-1"><a class="header-anchor" href="#带宽" aria-hidden="true">#</a> 带宽</h3><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-f4b18e0039f4a6c6.png" alt="img" loading="lazy"></p><h3 id="吞吐量" tabindex="-1"><a class="header-anchor" href="#吞吐量" aria-hidden="true">#</a> 吞吐量</h3><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-0910421c209252b1.png" alt="img" loading="lazy"></p><blockquote><p>带宽1 Gb/s的以太网，代表其额定速率是1 Gb/s，这个数值也是该以太网的<strong>吞吐量的绝对上限值</strong>。因此，对于带宽1 Gb/s的以太网，可能实际吞吐量只有 700 Mb/s，甚至更低。</p><p>注意：吞吐量还可以用每秒传送的字节数或帧数表示</p></blockquote><h3 id="时延" tabindex="-1"><a class="header-anchor" href="#时延" aria-hidden="true">#</a> 时延</h3><p>时延时指数据（一个报文或分组，甚至比特）从网络（或链路）的一端传送到另一端所需的时间。</p><p>网络时延由几部分组成：</p><ul><li>发送时延</li></ul><p>主机或路由器发送数据帧所需要的时间，也就是从发送数据帧的第一个比特算起，到该帧的最后一个比特发送完毕所需的时间。</p><ul><li>传播时延</li></ul><p>电磁波在信道中传播一定的距离需要花费的时间。</p><ul><li>处理时延</li></ul><p>主机或路由器在收到分组时要花费一定时间进行处理</p><ul><li>排队时延</li></ul><p>分组在进过网络传输时，要经过许多路由器。但分组在进入路由器后要先在输入队列中排队等待处理。</p><blockquote><p>有时会把排队时延看成<strong>处理时延 一部分</strong></p><p>总时延 = 发送时延 + 传播时延 + 处理时延 （处理时延 + 排队时延）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-5f9bf4982c20ad4f.png" alt="img" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-dd48cf5be5b2a7f7.png" alt="img" loading="lazy"></p><blockquote><p>当处理时延忽略不计时，发送时延 和 传播时延谁占主导，要具体情况具体分析</p></blockquote><h3 id="时延带宽积" tabindex="-1"><a class="header-anchor" href="#时延带宽积" aria-hidden="true">#</a> 时延带宽积</h3><p><strong>时延带宽积 = 传播时延 * 带宽</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-bdca296e77c59e48.png" alt="img" loading="lazy"></p><h3 id="往返时间" tabindex="-1"><a class="header-anchor" href="#往返时间" aria-hidden="true">#</a> 往返时间</h3><p>互联网上的信息不仅仅单方向传输而是双向交互的。因此，我们有时很需要知道<strong>双向交互一次所需的时间</strong>。</p><p><img src="https://upload-images.jianshu.io/upload_images/24878825-73f29eb38db9983c.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="img" loading="lazy"></p><h3 id="利用率" tabindex="-1"><a class="header-anchor" href="#利用率" aria-hidden="true">#</a> 利用率</h3><p>利用率有<strong>信道利用率</strong>和<strong>网络利用率</strong>两种。</p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-62d6da59682ef67f.png" alt="img" loading="lazy"></p><h3 id="丢包率" tabindex="-1"><a class="header-anchor" href="#丢包率" aria-hidden="true">#</a> 丢包率</h3><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/image-20221029155832103.png" alt="image-20221029155832103" loading="lazy"></p><h2 id="计算机网络体系结构" tabindex="-1"><a class="header-anchor" href="#计算机网络体系结构" aria-hidden="true">#</a> 计算机网络体系结构</h2><h3 id="常见的计算机网络体系结构" tabindex="-1"><a class="header-anchor" href="#常见的计算机网络体系结构" aria-hidden="true">#</a> 常见的计算机网络体系结构</h3><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-b5174af1551d6cee.png" alt="img" loading="lazy"></p><blockquote><p>如今用的最多的是 TCP/IP 体系结构，现今规模最大的、覆盖全球的、基于 TCP/IP 的互联网并未使用 OSI 标准。</p><p>TCP/IP 体系结构相当于将 OSI 体系结构的<strong>物理层</strong>和<strong>数据链路层</strong>合并为了<strong>网络接口层</strong>，并去掉了<strong>会话层</strong>和<strong>表示层</strong>。</p><p>TCP/IP 在网络层使用的协议是 IP 协议，IP 协议的意思是网际协议，因此 TCP/IP 体系结构的网络层称为网际层</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-f647ab572971d89a.png" alt="img" loading="lazy"></p><blockquote><p>在用户主机的操作系统中，通常都带有符合 TCP/IP 体系结构标准的 TCP/IP 协议族。</p><p>而用于网络互连的路由器中，也带有符合 TCP/IP 体系结构标准的 TCP/IP 协议族。</p><p>只不过路由器一般只包含网络接口层和网际层。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-6800e214b18c47c3.png" alt="img" loading="lazy"></p><blockquote><p><strong>网络接口层</strong>：并没有规定具体内容，这样做的目的是可以互连全世界各种不同的网络接口，例如：有线的以太网接口，无线局域网的WIFI接口等。</p><p><strong>网际层</strong>：它的核心协议是 IP 协议。</p><p><strong>运输层</strong>：TCP 和 UDP 是这层的两个重要协议。</p><p><strong>应用层</strong>：这层包含了大量的应用层协议，如 HTTP , DNS 等。</p></blockquote><blockquote><p>**IP 协议（网际层）<strong>可以将不同的</strong>网络接口（网络接口层）<strong>进行互连，并向其上的</strong>TCP协议和UDP协议（运输层）**提供网络互连服务</p><p>而 TCP 协议<strong>在享受 IP 协议提供的网络互连服务的基础上，可向</strong>应用层的相应协议提供可靠的传输服务。</p><p><strong>UDP 协议</strong>在享受 IP 协议提供的网络互连服务的基础上，可向<strong>应用层的相应协议</strong>提供<strong>不可靠</strong>的传输服务。</p></blockquote><blockquote><p>TCP/IP体系结构中最重要的是<strong>IP协议</strong>和<strong>TCP协议</strong>，因此用 TCP 和 IP 来表示整个协议大家族。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-82255e6c6d5f29bf.png" alt="img" loading="lazy"></p><p>教学时把TCP/IP体系结构的<strong>网络接口层</strong>分成了<strong>物理层</strong>和<strong>数据链路层</strong></p><h3 id="计算机网络体系结构分层的必要性" tabindex="-1"><a class="header-anchor" href="#计算机网络体系结构分层的必要性" aria-hidden="true">#</a> 计算机网络体系结构分层的必要性</h3><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-466a303e1e5cc42a.png" alt="img" loading="lazy"></p><p><strong>物理层问题</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-0274083e0bf0da85.png" alt="img" loading="lazy"></p><blockquote><p>这图说明</p><ul><li><p>第一，严格来说，传输媒体并不属于物理层</p></li><li><p>计算机传输的信号，并不是图示的方波信号</p></li></ul><p>这样举例只是让初学者容易理解</p></blockquote><p><strong>数据链路层问题</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-f0d9f2816d7bab9d.png" alt="img" loading="lazy"></p><p><strong>网络层问题</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-f55f86e0a78ffe23.png" alt="img" loading="lazy"></p><p><strong>运输层问题</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/image-20221029163535569.png" alt="image-20221029163535569" loading="lazy"></p><blockquote><p>如何标识与网络通信相关的应用进程：一个分组到来，我们应该交给哪个进程处理呢？浏览器进程还是QQ进程</p></blockquote><p><strong>应用层问题</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-edab6d1f00b0ab15.png" alt="img" loading="lazy"></p><blockquote><p>应用层该用什么方法（应用层协议）去解析数据</p></blockquote><p><strong>总结</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-96bdae8525215011.png" alt="img" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-d29fee34f68a16b9.png" alt="img" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-1cf0ec9780d80019.png" alt="img" loading="lazy"></p><h3 id="计算机网络体系结构-1" tabindex="-1"><a class="header-anchor" href="#计算机网络体系结构-1" aria-hidden="true">#</a> 计算机网络体系结构</h3><p>例子：主机的浏览器如何与Web服务器进行通信</p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-33e3c614a6ac37d0.png" alt="img" loading="lazy"></p><p><strong>解析：</strong></p><p>主机和Web服务器之间基于网络的通信，实际上是主机中的<strong>浏览器应用进程</strong>与Web服务器中的<strong>Web服务器应用进程</strong>之间基于<strong>网络的通信</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-8c5d1b3fdc1b7111.png" alt="img" loading="lazy"></p><p><strong>体系结构的各层在整个过程中起到怎样的作用？</strong></p><h5 id="发送方发送" tabindex="-1"><a class="header-anchor" href="#发送方发送" aria-hidden="true">#</a> 发送方发送</h5><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-ac36f7a9544dde9f.png" alt="img" loading="lazy"></p><blockquote><p>第一步：应用层</p><ul><li><strong>应用层</strong>按照 HTTP 协议和规定构建一个 <strong>HTTP请求报文</strong></li><li>应用层将 <strong>HTTP请求报文</strong> 交付给<strong>运输层</strong>处理</li></ul></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/24878825-cc2b73b1736d5809.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="img" loading="lazy"></p><blockquote><p>第二步：运输层</p><ul><li><strong>运输层</strong>给 <strong>HTTP 请求报文</strong>添加一个 <strong>TCP 首部</strong>，使之成为 <strong>TCP 报文段</strong></li><li><strong>TCP 报文段</strong>的首部格式作用是<strong>区分应用进程以及实现可靠传输</strong></li><li><strong>运输层</strong>将 TCP 报文交付给<strong>网络层</strong>处理</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-dc02183dcf759d9e.png" alt="img" loading="lazy"></p><blockquote><p>第三步：网络层</p><ul><li><strong>网络层</strong> 给 <strong>TCP 报文</strong>添加一个 <strong>IP 首部</strong>，使之成为 IP 数据报</li><li>IP 数据报的首部格式作用是使 IP 数据报可以在互联网上传输，也就是被<strong>路由器转发</strong></li><li><strong>网络层</strong>将 IP 数据报交付给<strong>数据链路层</strong>处理</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-f8cf8ce4a6bfdb54.png" alt="img" loading="lazy"></p><blockquote><p>第四步：数据链路层</p><ul><li><strong>数据链路层</strong>给 <strong>IP 数据报</strong>添加一个首部和尾部，使之成为<strong>帧</strong>（图示右边为首部，左边为尾部）</li><li>该<strong>首部</strong>的作用主要是为了让<strong>帧</strong>能够在一段链路上或一个网络上传输，能够被响应的<strong>目的主机</strong>接收</li><li>该<strong>尾部</strong>的作用是让目的主机检查所接收的<strong>帧是否有误码</strong></li><li><strong>数据链路层</strong>将<strong>帧</strong>交付给<strong>物理层</strong></li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-e7285afa504bce0d.png" alt="img" loading="lazy"></p><blockquote><p>第五步：物理层</p><ul><li><strong>物理层</strong>先将<strong>帧</strong>看做是<strong>比特流</strong>，这里的网络 N1 假设是以太网，所以<strong>物理层</strong>还会给该比特流前面添加<strong>前导码</strong></li><li><strong>前导码</strong>的作用是为了让目的主机做好接收帧的准备</li><li><strong>物理层</strong>将装有<strong>前导码</strong>的<strong>比特流</strong>变换成响应的<strong>信号</strong>发送给传输媒体</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-8ffee68ffe58b8a1.png" alt="img" loading="lazy"></p><blockquote><p>第六步：</p><ul><li>信号通过<strong>传输媒体</strong>到达<strong>路由器</strong></li></ul></blockquote><h5 id="路由器转发" tabindex="-1"><a class="header-anchor" href="#路由器转发" aria-hidden="true">#</a> 路由器转发</h5><p>物理层将信号变成比特流，然后去掉前导码，将其交付给数据链路层（实际上交付的是帧）</p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-b9824f4625354b9b.png" alt="img" loading="lazy"></p><p><strong>数据链路层</strong>将帧的首部和尾部去掉之后，将其交付给网络层（实际上交付的是 IP 数据报）</p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-09a0b27933c9895e.png" alt="img" loading="lazy"></p><p><strong>网络层</strong>解析 IP 数据报的首部，从中提取出目的网络地址，然后查找自身的路由表，确定转发端口，以便进行转发，网络层将 <strong>IP 数据报</strong>交付给<strong>数据链路层</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-bc79de20a0c4b57c.png" alt="img" loading="lazy"></p><p><strong>数据链路层</strong>给 <strong>IP 数据报</strong>添加一个首部和一个尾部，使之成为<strong>帧</strong>，数据链路层将帧交给物理层</p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-33d09406bfc433e0.png" alt="img" loading="lazy"></p><p><strong>物理层</strong>将装有<strong>前导码</strong>的<strong>比特流</strong>变换成相应的<strong>信号</strong>发送给传输媒体，信号通过传输媒体到达<strong>Web服务器</strong></p><h5 id="接收方接收" tabindex="-1"><a class="header-anchor" href="#接收方接收" aria-hidden="true">#</a> 接收方接收</h5><blockquote><p>和发送方（主机）发送过程的封装正好是反着来</p><p>在Web 服务器上</p><ul><li><p><strong>物理层</strong>将<strong>信号</strong>变换为<strong>比特流</strong>，然后去掉<strong>前导码</strong>后成为<strong>帧</strong>，交付给<strong>数据链路层</strong></p></li><li><p><strong>数据链路层</strong>将<strong>帧</strong>的<strong>首部</strong>和<strong>尾部</strong>去掉后成为<strong>IP数据报</strong>，将其交付给<strong>网络层</strong></p></li><li><p><strong>网络层</strong>将<strong>IP数据报</strong>的<strong>首部</strong>去掉后成为<strong>TCP报文段</strong>，将其交付给<strong>运输层</strong></p></li><li><p><strong>运输层</strong>将<strong>TCP报文段</strong>的<strong>首部</strong>去掉后成为<strong>HTTP请求报文</strong>，将其交付给<strong>应用层</strong></p></li><li><p><strong>应用层</strong>对<strong>HTTP请求报文</strong>进行<strong>解析</strong>，然后给主机发回<strong>响应报文</strong></p></li></ul><p><strong>发回响应报文的步骤和之前过程类似</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-d9f5b6ce408c252b.png" alt="img" loading="lazy"></p><h2 id="计算机网络体系结构中的专用术语" tabindex="-1"><a class="header-anchor" href="#计算机网络体系结构中的专用术语" aria-hidden="true">#</a> 计算机网络体系结构中的专用术语</h2><p>以下介绍的专用术语来源于OSI的七层协议体系结构，但也适用于TCP/IP的四层体系结构和五层协议体系结构</p><p><strong>实体</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-b4c748c8f731e416.png" alt="img" loading="lazy"></p><p><strong>协议</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-01d621fd0afde0a2.png" alt="img" loading="lazy"></p><blockquote><p>协议：控制两个对等实体进行逻辑通信的规则的集合</p><p>协议三要素：</p><ul><li><p>语法：定义所交换信息的格式</p></li><li><p>语义：定义收发双方所要完成的操作</p></li><li><p>同步：定义收发双发的时序关系</p></li></ul></blockquote><p><strong>服务</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-b3d7eb63257d9914.png" alt="img" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-f24a75796ed2c7f6.png" alt="img" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/24878825-f9bd7898a7f2dadd.png" alt="img" loading="lazy"></p>',214);function c(u,m){const g=s("ExternalLinkIcon");return r(),e("div",null,[a,n("p",null,[n("a",h,[o("中国互联网络信息中心CNNIC"),l(g)])]),d])}const f=i(p,[["render",c],["__file","chapter01.html.vue"]]);export{f as default};
