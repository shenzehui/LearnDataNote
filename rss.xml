<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://newzone.top/rss.xml" rel="self" type="application/rss+xml"/>
    <title>IT达摩院</title>
    <link>https://newzone.top/</link>
    <description>个人博客，旨在分享自己的技术</description>
    <language>zh-CN</language>
    <pubDate>Sat, 05 Nov 2022 06:35:51 GMT</pubDate>
    <lastBuildDate>Sat, 05 Nov 2022 06:35:51 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>Java 企业级开发</category>
    <item>
      <title>Git 教程</title>
      <link>https://newzone.top/git/git.html</link>
      <guid>https://newzone.top/git/git.html</guid>
      <source url="https://newzone.top/rss.xml">Git 教程</source>
      <description>Git是分布式版本控制系统（Distributed Version Control System，简称 DVCS）</description>
      <category>Java 企业级开发</category>
      <pubDate>Thu, 03 Nov 2022 11:20:20 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="一、git简介" tabindex="-1"> 一、Git简介</h2>
<h3 id="_1-1-项目的版本管理" tabindex="-1"> 1.1 项目的版本管理</h3>
<blockquote>
<p>在项目开发过程中，项目没开发到⼀个节点就会对当前项目进行备份，这个备份就是项目的⼀个版本；当我 们继续开发⼀个阶段后，再次进行备份，就⽣成新的版本——多个版本的集合就是项目的版本库</p>
</blockquote>
<p>在项目版本管理中，我们可以使用⼿动进行管理，但是存在⼀些问题：</p>
<ul>
<li>需要手动维护版本的更新日志，记录每个版本的变化</li>
<li>需要手动查找历史版本，当历史版本比较多的时候，查找工作很繁琐</li>
<li>当我们需要回退到某个版本时，只能够手动的通过 IDE 工具手动打开</li>
</ul>
<h3 id="_1-2-团队协同开发" tabindex="-1"> 1.2 团队协同开发</h3>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050951376.png" alt="" loading="lazy"></p>
<h3 id="_1-3-版本管理工具-—-git" tabindex="-1"> 1.3 版本管理工具 — Git</h3>
<blockquote>
<p>Git 是⼀个开源的分布式版本控制系统，用于敏捷高效的处理任何大小项目的版本管理。</p>
</blockquote>
<p>核心功能：</p>
<ul>
<li>项目的版本管理</li>
<li>团队协同开发</li>
</ul>
<h2 id="二、git-下载及安装" tabindex="-1"> 二、Git 下载及安装</h2>
<h3 id="_2-1-下载-git" tabindex="-1"> 2.1 下载 Git</h3>
<table>
<thead>
<tr>
<th><a href="https://git-scm.com/" target="_blank" rel="noopener noreferrer">https://git-scm.com/</a></th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050951781.png" alt="" loading="lazy"></td>
</tr>
</tbody>
</table>
<h3 id="_2-2-安装-git" tabindex="-1"> 2.2 安装 Git</h3>
<blockquote>
<p>除了选择安装位置以外，其他都傻瓜式安装</p>
</blockquote>
<h3 id="_2-3-检查" tabindex="-1"> 2.3 检查</h3>
<ul>
<li>win + r</li>
<li>输⼊ cmd</li>
<li>输入 git --version</li>
</ul>
<h2 id="三、git架构" tabindex="-1"> 三、Git架构</h2>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050951687.png" alt="" loading="lazy"></p>
<h2 id="四、git-的基本使用" tabindex="-1"> 四、Git 的基本使用</h2>
<h3 id="_4-1-创建版本库" tabindex="-1"> 4.1 创建版本库</h3>
<ul>
<li>在⼯作空间的目录中，右键 <code>Git Bash Here</code> 打开 git 终端</li>
<li>在 Git 终端中输⼊ <code>git init</code>  指令，创建版本库（就是⼀个.git目录）</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050951327.png" alt="" loading="lazy"></p>
<h3 id="_4-2-查看版本库状态的指令" tabindex="-1"> 4.2 查看版本库状态的指令</h3>
<div data-ext="sh"><pre><code><span>git</span> status
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="_4-3-将工作空间的修改添加到暂存区" tabindex="-1"> 4.3 将工作空间的修改添加到暂存区</h3>
<div data-ext="sh"><pre><code><span>git</span> <span>add</span> a.txt  <span>## 只将⼯作空间中的某个⽂件 add 到暂存区</span>
<span>git</span> <span>add</span> <span>.</span>  <span>## 将⼯作空间中所有⽂件都 add 暂存区</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="_4-4-将暂存区内容提交到版本库-仓库" tabindex="-1"> 4.4 将暂存区内容提交到版本库（仓库）</h3>
<div data-ext="sh"><pre><code><span>git</span> commit <span>-m</span> <span>'版本说明'</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="_4-5-查看版本库中的历史版本" tabindex="-1"> 4.5 查看版本库中的历史版本</h3>
<div data-ext="sh"><pre><code><span>git</span> log <span>--oneline</span> <span>## 每个版本信息只显示⼀⾏</span>
get log <span>## 显示每个版本的详细信息</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="_4-6-设置用户信息" tabindex="-1"> 4.6 设置用户信息</h3>
<blockquote>
<p>因为我们将暂存区的内容提交到版本时，会记录当前版本的提交的用户信息，因此在版本提交之前需要先绑 定用户信息</p>
</blockquote>
<div data-ext="sh"><pre><code><span>git</span> config <span>--global</span> user.name <span>'ergou'</span>
<span>git</span> config <span>--global</span> user.email <span>'haha@hehe.com'</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="_4-7-同步历史版本到工作空间" tabindex="-1"> 4.7 同步历史版本到工作空间</h3>
<div data-ext="sh"><pre><code><span>git</span> checkout 版本号
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="五、远程仓库" tabindex="-1"> 五、远程仓库</h2>
<blockquote>
<p>远程仓库，远程版本库；实现版本库的远程存储，以实现团队的协同开发</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050951874.png" alt="" loading="lazy"></p>
<h3 id="_5-2-如何获得远程仓库" tabindex="-1"> 5.2 如何获得远程仓库</h3>
<ul>
<li>使用 GitLab 搭建私服</li>
<li>远程仓库提供商 GitHub <a href="https://gitbub.com" target="_blank" rel="noopener noreferrer">https://gitbub.com</a></li>
<li>Gitee（码云） <a href="https://gitee.com" target="_blank" rel="noopener noreferrer">https://gitee.com</a></li>
<li>Coding</li>
</ul>
<h3 id="_5-3-创建远程仓库-码云" tabindex="-1"> 5.3 创建远程仓库（码云）</h3>
<ul>
<li>注册账号
<ul>
<li>账号：<a href="mailto:3032388097@qq.com">3032388097@qq.com</a></li>
<li>密码：xxxxxx</li>
</ul>
</li>
<li>创建远程仓库 <a href="https://gitee.com/shenzehui/java2022.git" target="_blank" rel="noopener noreferrer">https://gitee.com/shenzehui/java2022.git</a></li>
<li>远程仓库管理（添加开发人员）</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050951303.png" alt="" loading="lazy"></p>
<h2 id="六、远程仓库操作" tabindex="-1"> 六、远程仓库操作</h2>
<h3 id="_6-1-push-本地仓库到远程仓库" tabindex="-1"> 6.1 push 本地仓库到远程仓库</h3>
<h5 id="_6-1-1-准备工作" tabindex="-1"> 6.1.1 准备工作</h5>
<ol>
<li>创建本地⼯作空间</li>
</ol>
<div data-ext="sh"><pre><code>D:<span>\</span>demo
	src
		main
			<span>java</span>
			resources
		<span>test</span>
			<span>java</span>
	pom.xml
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><ol start="2">
<li>初始化本地仓库</li>
</ol>
<div data-ext="sh"><pre><code><span>git</span> init
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="3">
<li>将⼯作空间搭建的项目结构 add 到暂存区</li>
</ol>
<div data-ext="sh"><pre><code><span>git</span> <span>add</span> <span>.</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="4">
<li>将暂存区文件提交到版本库，生成第一个版本</li>
</ol>
<div data-ext="sh"><pre><code><span>git</span> commit <span>-m</span> <span>'提交说明内容'</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="5">
<li>为当前项⽬创建⼀个远程仓库</li>
</ol>
<p><a href="https://gitee.com/shenzehui/java2022.git" target="_blank" rel="noopener noreferrer">https://gitee.com/shenzehui/java2022.git</a></p>
<h5 id="_6-1-2-本地仓库关联远程仓库" tabindex="-1"> 6.1.2 本地仓库关联远程仓库</h5>
<blockquote>
<p>建⽴本地仓库和远程仓库 <a href="https://gitee.com/shenzehui/java2022.git" target="_blank" rel="noopener noreferrer">https://gitee.com/shenzehui/java2022.git</a> 的关联</p>
</blockquote>
<div data-ext="sh"><pre><code><span>git</span> remote <span>add</span> origin https://gitee.com/shenzehui/java2022.git
</code></pre><div aria-hidden="true"><div></div></div></div><h5 id="_6-1-3-查看远程仓库状态" tabindex="-1"> 6.1.3 查看远程仓库状态</h5>
<div data-ext="sh"><pre><code><span>git</span> remote <span>-v</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h5 id="_6-1-4-将本地仓库-push-到远程仓库" tabindex="-1"> 6.1.4 将本地仓库 push 到远程仓库</h5>
<blockquote>
<p>push 到远程仓库需要 gitee 的帐号和密码</p>
</blockquote>
<div data-ext="sh"><pre><code><span>git</span> push origin master
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050952074.png" alt="" loading="lazy"></p>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050952071.png" alt="" loading="lazy"></p>
<h3 id="_6-2-其他开发者-pull-远程仓库到本地" tabindex="-1"> 6.2 其他开发者 pull 远程仓库到本地</h3>
<h5 id="_6-2-1-先创建本地仓库" tabindex="-1"> 6.2.1 先创建本地仓库</h5>
<ul>
<li>在 E 盘创建 ws 目录(空目录)，进⼊ ws 目录，打开 Git 客户端</li>
<li>创建本地版本库</li>
</ul>
<div data-ext="sh"><pre><code><span>git</span> init
</code></pre><div aria-hidden="true"><div></div></div></div><h5 id="_6-2-2-拉取远程仓库到本地" tabindex="-1"> 6.2.2 拉取远程仓库到本地</h5>
<ul>
<li>拉取远程仓库</li>
</ul>
<div data-ext="sh"><pre><code><span>git</span> pull 远程仓库地址 master
<span>git</span> pull https://gitee.com/shenzehui/java2022.git master
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h4 id="_6-3-解决协同开发冲突问题" tabindex="-1"> 6.3 解决协同开发冲突问题</h4>
<div data-ext="text"><pre><code>场景: Helloworld.java [bbb]
开发者1：沈哥 							开发者2：周瑜
-------------------------------------------------------------------------------------------
git pull java2022 master					git pull java2022 master 
 										在 Hellworld.java 中新增内容 “bbb”
在 Hellworld.java 中新增内容 “aaa”
 										git add .
 										git commit -m ''
 										git push java2022 master
git add .
git commit -m ''
git push java2022 master【会失败！！！ 在我 pull 之后，push 之前其他开发人员push过】
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div data-ext="text"><pre><code>问题：我该如何操作？
git pull java2022 master 【将小乔修改的内容拉取到本地】

对文件进行冲突合并

git add .
git commit -m ''
git push java2022 master
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>Helloworld.java</p>
<div data-ext="java"><pre><code><span>>>></span><span>>>></span><span>>>></span><span>>>></span><span>>>></span><span>>>></span><span>>>></span><span>HEAD</span>
aaa
<span>==</span><span>==</span><span>==</span><span>==</span><span>==</span><span>==</span><span>==</span><span>==</span><span>=</span>
bbb
<span>&lt;&lt;</span><span>&lt;&lt;</span><span>&lt;&lt;</span><span>&lt;&lt;</span><span>&lt;&lt;</span><span>&lt;&lt;</span><span>&lt;&lt;</span><span>&lt;&lt;</span><span>&lt;&lt;</span><span>&lt;&lt;</span><span>&lt;</span> sikdfhjkasdfhjasdfhjk
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="七、分支管理" tabindex="-1"> 七、分支管理</h2>
<h3 id="_7-1-什么是分支" tabindex="-1"> 7.1 什么是分支</h3>
<blockquote>
<p>分支就是版本库中记录版本位置（支线），分支之间项目会影响，使用分支可以对项目起到保护作用分支就是⼀条时间线，每次提交就在这条时间线上形成⼀个版本</p>
</blockquote>
<h3 id="_7-2-分支特性" tabindex="-1"> 7.2 分支特性</h3>
<ul>
<li>创建⼀个新的版本库，默认创建⼀个主分支 — master 分支</li>
<li>每个分支可以进行单独管理（常规分支 、保护分支 、只读分支 ）</li>
<li>分支是可以合并的</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050952597.png" alt="" loading="lazy"></p>
<h3 id="_7-3-分支操作" tabindex="-1"> 7.3 分支操作</h3>
<h5 id="_7-3-1-创建分支" tabindex="-1"> 7.3.1 创建分支</h5>
<div data-ext="sh"><pre><code><span>git</span> branch branch_name  <span>#会继承当前分支下的最后一个版本</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h5 id="_7-3-2-查看分支" tabindex="-1"> 7.3.2 查看分支</h5>
<div data-ext="sh"><pre><code><span>git</span> branch
</code></pre><div aria-hidden="true"><div></div></div></div><h5 id="_7-3-3-切换分支" tabindex="-1"> 7.3.3 切换分支</h5>
<div data-ext="sh"><pre><code><span>git</span> checkout branch_name <span># 切换到指定分⽀上的最新版本</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h5 id="_7-3-4-检出分支" tabindex="-1"> 7.3.4 检出分支</h5>
<div data-ext="sh"><pre><code><span>git</span> checkout 历史版本 <span>-b</span> branch_name <span># 签出指定的历史版本创建新分⽀</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h5 id="_7-3-5-分支合并" tabindex="-1"> 7.3.5 分支合并</h5>
<ul>
<li><strong>三方合并：当前分支和要合并分支都有新版本</strong></li>
<li><strong>快速合并：当前分支没有新版本</strong></li>
</ul>
<div data-ext="sh"><pre><code><span># 在master分⽀执⾏ git merge dev 表示将 dev 分⽀合并 merge   </span>
<span>git</span> merge breanch_name
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050952438.png" alt="" loading="lazy"></p>
<h5 id="_7-3-6-查看分支及版本视图" tabindex="-1"> 7.3.6 查看分支及版本视图</h5>
<div data-ext="sh"><pre><code><span>git</span> log <span>--oneline</span> <span>--graph</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><strong>企业中主流分支使用</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050952473.png" alt="" loading="lazy"></p>
<h2 id="八、idea-整合-git-使用" tabindex="-1"> 八、Idea 整合 Git 使用</h2>
<blockquote>
<p>作为 Java 开发工程，我们代码的编写工作都是在 IDE 工具（idea）中完成，因此我们需要了解和掌握直接使用 IDE 工具完成 Git 的操作</p>
</blockquote>
<h3 id="_8-1-idea-关联-git" tabindex="-1"> 8.1 IDEA 关联 Git</h3>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050952099.png" alt="" loading="lazy"></p>
<h3 id="_8-2-idea-中-git-版本管理" tabindex="-1"> 8.2 IDEA 中 Git 版本管理</h3>
<blockquote>
<p>准备⼯作：打开 IDEA 新建⼀个 web ⼯程</p>
</blockquote>
<h5 id="_8-2-1-创建本地版本库" tabindex="-1"> 8.2.1 创建本地版本库</h5>
<table>
<thead>
<tr>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050952204.png" alt="" loading="lazy"></td>
</tr>
<tr>
<td><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050952297.png" alt="" loading="lazy"></td>
</tr>
</tbody>
</table>
<h5 id="_8-2-2-设置忽略文件" tabindex="-1"> 8.2.2 设置忽略文件</h5>
<blockquote>
<p>在工作空间中有些文件是不需要记录到版本库中的（例如 .idea、target、.iml 文件），可以通过设置忽略提交 来实现</p>
</blockquote>
<ul>
<li>在工作空间的根目录（项目的根目录）中创建⼀个名为  <code>.gitignore</code>  文件</li>
<li>在 <code>.gitignore</code> 文件配置忽略过滤条件</li>
</ul>
<div data-ext="java"><pre><code><span>.</span>idea
target
<span>*</span><span>.</span>iml
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h5 id="_8-2-3-将工作空间-add-到暂存区" tabindex="-1"> 8.2.3 将工作空间 add 到暂存区</h5>
<ul>
<li>选择项目/文件---右键----Git---Add(添加到暂存区的文件---绿色)</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050952837.png" alt="" loading="lazy"></p>
<ul>
<li>如果一个文件创建好之后还没有添加到暂存区—棕红色</li>
<li>添加到暂存区的操作可以设置默认添加</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050952003.png" alt="" loading="lazy"></p>
<h3 id="_8-2-4-将暂存区提交到版本库" tabindex="-1"> 8.2.4 将暂存区提交到版本库</h3>
<ul>
<li>选择项目/文件---右键---Git--Commit（记录到版本库的文件--黑色）</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050952799.png" alt="" loading="lazy"></p>
<ul>
<li>如果对记录到 版本库的文件进行了修改，也就是说工作空间和版本库不⼀致--蓝色</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050952669.png" alt="" loading="lazy"></p>
<h3 id="_8-3-idea-中-git-分支管理" tabindex="-1"> 8.3 IDEA 中 Git 分支管理</h3>
<h5 id="_8-3-1-创建分支" tabindex="-1"> 8.3.1 创建分支</h5>
<ul>
<li>点击IDEA右下角 <code>Git</code></li>
<li>在弹窗中点击 <code>New Branch</code></li>
<li>输入新分支的名称</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050953412.png" alt="" loading="lazy"></p>
<h5 id="_8-3-2-切换分支" tabindex="-1"> 8.3.2 切换分支</h5>
<ul>
<li>点击IDEA右下角 <code>Git</code></li>
<li>点击非当前分支右边的箭头</li>
<li>在选项卡点击 <code>checkout</code></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050954842.png" alt="" loading="lazy"></p>
<h5 id="_8-3-3-删除分支" tabindex="-1"> 8.3.3 删除分支</h5>
<table>
<thead>
<tr>
<th>点击右下角 git</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050953620.png" alt="" loading="lazy"></td>
</tr>
</tbody>
</table>
<h5 id="_8-3-4-合并分支" tabindex="-1"> 8.3.4 合并分支</h5>
<blockquote>
<p>例如：将 dev 合并到 master</p>
</blockquote>
<ul>
<li>切换到 master 分支</li>
<li>点击 dev 分支右面的箭头，在展开的菜单中选择 <code>Merge Selected into current</code></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050953432.png" alt="" loading="lazy"></p>
<h3 id="_8-4-idea-中使用-git-进行团队协同开发" tabindex="-1"> 8.4 IDEA 中使用 Git 进行团队协同开发</h3>
<h5 id="_8-4-1-项目管理者" tabindex="-1"> 8.4.1 项目管理者</h5>
<ol>
<li><strong>完成项目搭建</strong></li>
</ol>
<ul>
<li>略</li>
</ul>
<ol start="2">
<li>为当前项目创建本地版本库</li>
<li>将搭建好的项目提交到本地版本库</li>
</ol>
<ul>
<li>add 到暂存区</li>
<li>commit 到版本库</li>
</ul>
<ol start="4">
<li>创建远程版本库（远程仓库）</li>
</ol>
<ul>
<li><a href="https://gitee.com/shenzehui/git-jd.git" target="_blank" rel="noopener noreferrer">https://gitee.com/shenzehui/git-jd.git</a></li>
<li>管理—添加开发者</li>
</ul>
<ol start="5">
<li>
<p>将本地仓库 push 到远程仓库（master 分支——master 分支）
| <img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050953873.png" alt="" loading="lazy"> |
| ------------------------------------------------------------ |
| <img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050953816.png" alt="" loading="lazy"> |
| <img src="https://gitee.com/shenzehui/image-repo/raw/master/img/202210050953616.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=LfrWY&amp;originHeight=527&amp;originWidth=800&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"> |</p>
</li>
<li>
<p>在本地创建 dev 分支</p>
</li>
</ol>
<blockquote>
<p>在远程仓库 <code>New Branch from Selected</code> 新建本地 <code>dev</code> 分支（master 需要进行保护）</p>
</blockquote>
<table>
<thead>
<tr>
<th><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050953878.png" alt="" loading="lazy"></th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://gitee.com/shenzehui/image-repo/raw/master/img/202210050953215.png#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=Rjqla&amp;originHeight=176&amp;originWidth=316&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"></td>
</tr>
</tbody>
</table>
<p><strong>在本地会创建一个 dev 分支，但分支内容会与远程仓库 master 分支一致</strong></p>
<ol start="7">
<li>
<p>将本地<code>dev</code>分支 push 到远程仓库，新建远程仓库的 dev 分支
| <img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050953943.png" alt="" loading="lazy"> |
| ------------------------------------------------------------ |
| <img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050953201.png" alt="" loading="lazy"> |</p>
</li>
<li>
<p>设置远程仓库中 master 分支为保护分支</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050953141.png" alt="" loading="lazy"></p>
<h5 id="_8-4-2-项目开发者" tabindex="-1"> 8.4.2 项目开发者</h5>
<ol>
<li>从管理员提供的远程仓库 pull 项目到本地</li>
</ol>
<ul>
<li>远程仓库 <a href="https://gitee.com/shenzehui/git-jd.git" target="_blank" rel="noopener noreferrer">https://gitee.com/shenzehui/git-jd.git</a>
| <img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050953312.png" alt="" loading="lazy"> |
| ------------------------------------------------------------ |
| <img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050953565.png" alt="" loading="lazy"> |</li>
</ul>
<ol start="2">
<li>打开项目（此时本地工作空间的项目和远程仓库是同步的）</li>
<li>开发步骤：</li>
</ol>
<ul>
<li>新建本地分支 <code>dev</code></li>
<li>选择要修改的文件 — pull</li>
<li>进行修改操作</li>
<li>测试本地修改</li>
<li>add 到暂存区</li>
<li>commit 到本地版本库</li>
<li>push 到远程仓库（dev）</li>
</ul>
<h3 id="_8-5-解决团队协同开发的冲突问题" tabindex="-1"> 8.5 解决团队协同开发的冲突问题</h3>
<blockquote>
<p>冲突：在 pull 之后，push 之前被其他开发者 push 成功</p>
</blockquote>
<ul>
<li>选择产生冲突的文件---pull</li>
<li>弹出弹窗提示：accpet yours | accept theirs | Merge
<ul>
<li><code>accpet yours</code> 保留自己的版本（提交时会覆盖其他开发者代码）</li>
<li><code>accpet theirs</code> 保留远程仓库上的版本（会导致自己修改的代码丢失）</li>
<li><code>Merge</code> 手动合并（和其他开发者沟通合并方案）</li>
</ul>
</li>
</ul>
<p><strong>注意：新版 IDEA 这里开始直接点 Merge 即可，后面会有其它方案提示</strong></p>
<table>
<thead>
<tr>
<th><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050954133.png" alt="" loading="lazy"></th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050954404.png" alt="" loading="lazy"></td>
</tr>
<tr>
<td>点击 Merge 后的显示：</td>
</tr>
<tr>
<td><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050954777.png" alt="" loading="lazy"></td>
</tr>
</tbody>
</table>
<ul>
<li>Merge 页面说明：</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050954934.png" alt="" loading="lazy"></p>
<ul>
<li>点击两个合并按钮后：
| <img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050954102.png" alt="" loading="lazy"> |
| ------------------------------------------------------------ |
| <img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050954092.png" alt="" loading="lazy"> |
| <img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050954705.png" alt="" loading="lazy"> |</li>
</ul>
<p><strong>注意：此时需要再进行一次 push 操作才会生效</strong></p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210050951376.png" type="image/png"/>
    </item>
    <item>
      <title>MyBatis 基础篇</title>
      <link>https://newzone.top/ssm/mybatis/mybatis-01.html</link>
      <guid>https://newzone.top/ssm/mybatis/mybatis-01.html</guid>
      <source url="https://newzone.top/rss.xml">MyBatis 基础篇</source>
      <description>MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Ordinary Java Object,普通的 Java对象)映射成数据库中的记录。</description>
      <category>Java 企业级开发</category>
      <pubDate>Sun, 30 Oct 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="mybatis简介" tabindex="-1"> MyBatis简介</h2>
<h3 id="框架概念" tabindex="-1"> 框架概念</h3>
<blockquote>
<p>框架，就是软件的半成品，完成了软件开发过程中的通用操作，程序员只需很少或者不用进行加工就能够实 现特定的功能，从而简化开发人员在软件开发中的步骤，提高开发效率。</p>
</blockquote>
<h3 id="常用框架" tabindex="-1"> 常用框架</h3>
<ul>
<li>MVC框架：简化了 Servlet 的开发步骤
<ul>
<li>Struts</li>
<li>Struts2</li>
<li><code>SpringMVC</code></li>
</ul>
</li>
<li>持久层框架：完成数据库操作的框架
<ul>
<li>apache DBUtils</li>
<li>Hibernate</li>
<li>Spring JPA</li>
<li><code>MyBatis</code></li>
<li>EJB3.0</li>
</ul>
</li>
<li>胶水框架：<code>Spring</code></li>
<li>SSM Spring SpringMVC MyBatis</li>
<li>SSH Spring Struts2 Hibernate</li>
</ul>
<h3 id="mybatis-介绍" tabindex="-1"> MyBatis 介绍</h3>
<blockquote>
<p>MyBatis 是⼀个 <code>半自动</code> 的 <code>ORM</code> 框架</p>
</blockquote>
<blockquote>
<p>ORM（Object Relational Mapping）对象关系映射，将 Java 中的⼀个对象与数据表中一行记录⼀⼀对应。</p>
</blockquote>
<blockquote>
<p>ORM 框架提供了实体类与数据表的映射关系，通过映射文件的配置，实现对象的持久化。</p>
</blockquote>
<ul>
<li>MyBatis 的前身是 iBatis，iBatis 是 Apache 软件基金会提供的⼀个开源项目</li>
<li>2010年 iBatis 迁移到 Google code，正式更名为 MyBatis</li>
<li>2013年迁移到 Github 托管</li>
<li>MyBatis 特点：
<ul>
<li>支持自定义 SQL、存储过程</li>
<li>对原有的 JDBC 进行了封装，几乎消除了所有 JDBC 代码，让开发者只需关注 SQL 本身</li>
<li>支持 XML 和注解配置方式自定完成 ORM 操作，实现结果映射</li>
</ul>
</li>
</ul>
<h2 id="mybatis-框架部署" tabindex="-1"> MyBatis 框架部署</h2>
<blockquote>
<p>框架部署，就是将框架引入到我们的项目中</p>
</blockquote>
<h3 id="创建-maven-项目" tabindex="-1"> 创建 Maven 项目</h3>
<ul>
<li>Java 工程</li>
<li>Web 工程</li>
</ul>
<h3 id="在项目中添加-mybatis-依赖" tabindex="-1"> 在项目中添加 MyBatis 依赖</h3>
<ul>
<li>在 pom.xml 中添加依赖
<ul>
<li>mybatis</li>
<li>mysql driver</li>
</ul>
</li>
</ul>
<div data-ext="xml"><pre><code><span>&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span>
<span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>mysql<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>mysql-connector-java<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>version</span><span>></span></span>5.1.47<span><span><span>&lt;/</span>version</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>
<span>&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --></span>
<span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>org.mybatis<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>mybatis<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>version</span><span>></span></span>3.4.6<span><span><span>&lt;/</span>version</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="创建-mybatis-配置文件" tabindex="-1"> 创建 MyBatis 配置文件</h3>
<ul>
<li>创建自定义模板：选择 resources----右键 New----Edit File Templates</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011047.png" alt="" loading="lazy"></p>
<ul>
<li>
<p>在resources中创建名为 <code>mybatis-config.xml</code> 的文件</p>
</li>
<li>
<p>在  <code>mybatis-config.xml</code> 文件配置数据库连接信息</p>
</li>
</ul>
<div data-ext="xml"><pre><code><span>&lt;?xml version="1.0" encoding="UTF-8" ?></span>
<span><span>&lt;!</span><span>DOCTYPE</span> <span>configuration</span> <span>PUBLIC</span> <span>"-//mybatis.org//DTD Config 3.0//EN"</span>
 <span>"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span>></span></span>
<span><span><span>&lt;</span>configuration</span><span>></span></span>

    <span>&lt;!-- 在 environments 配置数据库连接信息 --></span>
    <span>&lt;!-- 在 environments 标签中可以定义多个 environment 标签，每个 environment 标签可以定义⼀套连接配置 --></span>
    <span>&lt;!-- default 属性，⽤来指定使⽤哪个 environment 标签 --></span>
    <span><span><span>&lt;</span>environments</span> <span>default</span><span><span>=</span><span>"</span>mysql<span>"</span></span><span>></span></span>
        <span><span><span>&lt;</span>environment</span> <span>id</span><span><span>=</span><span>"</span>mysql<span>"</span></span><span>></span></span>
            <span>&lt;!--transactionManager 标签⽤于配置数据库管理⽅式--></span>
            <span><span><span>&lt;</span>transactionManager</span> <span>type</span><span><span>=</span><span>"</span>JDBC<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>transactionManager</span><span>></span></span>
            <span>&lt;!--dataSource 标签就是⽤来配置数据库连接信息 --></span>
            <span><span><span>&lt;</span>dataSource</span> <span>type</span><span><span>=</span><span>"</span>POOLED<span>"</span></span><span>></span></span>
                <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>driver<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>com.mysql.jdbc.Driver<span>"</span></span><span>/></span></span>
                <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>url<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>jdbc:mysql://localhost:3306/db_2010_fmwy?
                                            characterEncoding=utf-8<span>"</span></span><span>/></span></span>
                <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>username<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>root<span>"</span></span><span>/></span></span>
                <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>password<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>admin123<span>"</span></span><span>/></span></span>
            <span><span><span>&lt;/</span>dataSource</span><span>></span></span>
        <span><span><span>&lt;/</span>environment</span><span>></span></span>
    <span><span><span>&lt;/</span>environments</span><span>></span></span>
<span><span><span>&lt;/</span>configuration</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="mybatis-框架使用" tabindex="-1"> Mybatis 框架使用</h2>
<blockquote>
<p>案例：学生信息的数据库操作</p>
</blockquote>
<h3 id="创建数据表" tabindex="-1"> 创建数据表</h3>
<table>
<thead>
<tr>
<th>tb_students</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011588.png" alt="" loading="lazy"></td>
</tr>
</tbody>
</table>
<h3 id="创建实体类" tabindex="-1"> 创建实体类</h3>
<table>
<thead>
<tr>
<th>Student.java</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011589.png" alt="" loading="lazy"></td>
</tr>
</tbody>
</table>
<h3 id="创建-dao-接口-定义操作方法" tabindex="-1"> 创建 DAO 接口，定义操作方法</h3>
<table>
<thead>
<tr>
<th>DAO 接口</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011590.png" alt="" loading="lazy"></td>
</tr>
</tbody>
</table>
<h3 id="创建-dao-接口的映射文件" tabindex="-1"> 创建 DAO 接口的映射文件</h3>
<ul>
<li>在 <code>resources</code> 目录下，新建名为 <code>mappers</code> 文件夹</li>
<li>在 <code>mappers</code> 中新建名为 <code>StudentMapper.xml</code> 的映射文件（根据模板创建）</li>
<li>在映射文件中对 DAO 中定义的方法进行实现：</li>
</ul>
<div data-ext="xml"><pre><code><span>&lt;?xml version="1.0" encoding="UTF-8" ?></span>
<span><span>&lt;!</span><span>DOCTYPE</span> <span>mapper</span>
        <span>PUBLIC</span> <span>"-//mybatis.org//DTD Mapper 3.0//EN"</span>
        <span>"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span>></span></span>
<span><span><span>&lt;</span>mapper</span> <span>namespace</span><span><span>=</span><span>"</span>com.marico.dao.StudentDao<span>"</span></span><span>></span></span>
    <span>&lt;!--使用 insert,update,delete,select 标签写 sql--></span>
    <span><span><span>&lt;</span>insert</span> <span>id</span><span><span>=</span><span>"</span>insertStudent<span>"</span></span> <span>parameterType</span><span><span>=</span><span>"</span>student<span>"</span></span><span>></span></span>
        insert into tb_students(stu_num, stu_name, stu_gender, stu_age)
        values (#{stuNum}, #{stuName}, #{stuGender}, #{stuAge})
    <span><span><span>&lt;/</span>insert</span><span>></span></span>

    <span><span><span>&lt;</span>delete</span> <span>id</span><span><span>=</span><span>"</span>deleteStudent<span>"</span></span><span>></span></span>
        delete from tb_students where  stu_num = #{stuNum}
    <span><span><span>&lt;/</span>delete</span><span>></span></span>
<span><span><span>&lt;/</span>mapper</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="将映射文件添加到主配置文件" tabindex="-1"> 将映射文件添加到主配置文件</h3>
<table>
<thead>
<tr>
<th>mybatis-config.xml</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011591.png" alt="" loading="lazy"></td>
</tr>
</tbody>
</table>
<h2 id="单元测试" tabindex="-1"> 单元测试</h2>
<h3 id="添加单元测依赖" tabindex="-1"> 添加单元测依赖</h3>
<div data-ext="xml"><pre><code><span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>junit<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>junit<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>version</span><span>></span></span>4.12<span><span><span>&lt;/</span>version</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="创建单元测试类" tabindex="-1"> 创建单元测试类</h3>
<table>
<thead>
<tr>
<th>在被测试类名后 alt+insert --- 选择 Test</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011592.png" alt="" loading="lazy"></td>
</tr>
</tbody>
</table>
<h3 id="测试代码" tabindex="-1"> 测试代码</h3>
<div data-ext="java"><pre><code><span>package</span> <span>com<span>.</span>marico<span>.</span>dao</span><span>;</span>

<span>import</span> <span><span>com<span>.</span>marico<span>.</span>pojo<span>.</span></span><span>Student</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>apache<span>.</span>ibatis<span>.</span>io<span>.</span></span><span>Resources</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>apache<span>.</span>ibatis<span>.</span>session<span>.</span></span><span>SqlSession</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>apache<span>.</span>ibatis<span>.</span>session<span>.</span></span><span>SqlSessionFactory</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>apache<span>.</span>ibatis<span>.</span>session<span>.</span></span><span>SqlSessionFactoryBuilder</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>junit<span>.</span></span><span>Test</span></span><span>;</span>

<span>import</span> <span><span>java<span>.</span>io<span>.</span></span><span>IOException</span></span><span>;</span>
<span>import</span> <span><span>java<span>.</span>io<span>.</span></span><span>InputStream</span></span><span>;</span>

<span>/**
 * @Author marico
 * @Date 2022/7/26 14:54
 * @PackageName:com.marico.dao
 * @ClassName: StudentDaoTest
 * @Description: TODO
 * @Version 1.0
 */</span>
<span>public</span> <span>class</span> <span>StudentDaoTest</span> <span>{</span>

    <span>@Test</span>
    <span>public</span> <span>void</span> <span>insertStudent</span><span>(</span><span>)</span> <span>{</span>
        <span>InputStream</span> inputStream <span>=</span> <span>null</span><span>;</span>
        <span>try</span> <span>{</span>
            <span>//加载 mybatis 配置文件</span>
            inputStream <span>=</span> <span>Resources</span><span>.</span><span>getResourceAsStream</span><span>(</span><span>"mybatis-config.xml"</span><span>)</span><span>;</span>
            <span>//会话工厂</span>
            <span>SqlSessionFactory</span> sqlSessionFactory <span>=</span> <span>new</span> <span>SqlSessionFactoryBuilder</span><span>(</span><span>)</span><span>.</span><span>build</span><span>(</span>inputStream<span>)</span><span>;</span>
            <span>//会话（连接）</span>
            <span>SqlSession</span> session <span>=</span> sqlSessionFactory<span>.</span><span>openSession</span><span>(</span><span>)</span><span>;</span>
            <span>//通过会话回去 Dao 对象</span>
            <span>StudentDao</span> studentDao <span>=</span> session<span>.</span><span>getMapper</span><span>(</span><span>StudentDao</span><span>.</span><span>class</span><span>)</span><span>;</span>
            <span>//测试 StudentDao 中的方法</span>
            <span>int</span> result <span>=</span> studentDao<span>.</span><span>insertStudent</span><span>(</span><span>new</span> <span>Student</span><span>(</span><span>null</span><span>,</span> <span>"12"</span><span>,</span> <span>"撒贝宁"</span><span>,</span> <span>"男"</span><span>,</span> <span>50</span><span>)</span><span>)</span><span>;</span>
            <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span><span>"result = "</span> <span>+</span> result<span>)</span><span>;</span>
            <span>//手动提交</span>
            session<span>.</span><span>commit</span><span>(</span><span>)</span><span>;</span>
        <span>}</span> <span>catch</span> <span>(</span><span>IOException</span> e<span>)</span> <span>{</span>
            e<span>.</span><span>printStackTrace</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>

    <span>}</span>

    <span>@Test</span>
    <span>public</span> <span>void</span> <span>deleteStudent</span><span>(</span><span>)</span> <span>{</span>
    <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="mybatis-的-crud-操作" tabindex="-1"> MyBatis 的 CRUD 操作</h2>
<blockquote>
<p>案例：学生信息的增删查改</p>
</blockquote>
<h3 id="添加操作" tabindex="-1"> 添加操作</h3>
<p>略</p>
<h3 id="删除操作" tabindex="-1"> 删除操作</h3>
<blockquote>
<p>根据学号删除⼀条学生信息</p>
</blockquote>
<ul>
<li>在 StudentDAO 中定义删除方法</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011593.png" alt="" loading="lazy"></p>
<ul>
<li>在 StudentMapper.xml 中对接口方法进行&quot;实现&quot;</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011594.png" alt="" loading="lazy"></p>
<ul>
<li>测试：在 StudentDAO 的测试类中添加测试方法</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011595.png" alt="" loading="lazy"></p>
<h3 id="修改操作" tabindex="-1"> 修改操作</h3>
<blockquote>
<p>根据学生学号，修改其他字段信息</p>
</blockquote>
<ul>
<li>在StudentDAO 接口中定义修改方法</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011596.png" alt="" loading="lazy"></p>
<ul>
<li>在 StudentMapper.xml 中实现接口中定义的修改方法</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011597.png" alt="" loading="lazy"></p>
<ul>
<li>单元测试</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011599.png" alt="" loading="lazy"></p>
<h3 id="查询操作-查询所有" tabindex="-1"> 查询操作-查询所有</h3>
<ul>
<li>在 StudentDAO 接口定义操作方法</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011600.png" alt="" loading="lazy"></p>
<ul>
<li>在 StudentMapper.xml 中&quot;实现&quot;DAO中定义的方法</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011601.png" alt="" loading="lazy"></p>
<ul>
<li>单元测试</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011602.png" alt="" loading="lazy"></p>
<h3 id="查询操作-查询一条记录" tabindex="-1"> 查询操作-查询一条记录</h3>
<blockquote>
<p>根据学号查询⼀个学生信息</p>
</blockquote>
<ul>
<li>在StudentDAO接口中定义方法</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011603.png" alt="" loading="lazy"></p>
<ul>
<li>在 StudentDAOMapper.xml 中配置 StudentDAO 接口的方法实现——SQL</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011604.png" alt="" loading="lazy"></p>
<ul>
<li>单元测试
<img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011605.png" alt="" loading="lazy"></li>
</ul>
<h3 id="查询操作-多参数查询" tabindex="-1"> 查询操作-多参数查询</h3>
<blockquote>
<p>分页查询（参数 start ， pageSize）</p>
</blockquote>
<ul>
<li>在 StudentDAO 中定义操作方法，如果方法有多个参数，使用 <code>@Param</code>  注解声明参数的别名</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011606.png" alt="" loading="lazy"></p>
<ul>
<li>在 StudentMapper.xml 配置 sql 时，使用 <code>#{别名}</code>获取到指定的参数</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011607.png" alt="" loading="lazy"></p>
<p><strong><code>注意</code></strong> 如果 DAO 操作方法没有通过 @Param 指定参数别名，在 SQL 中也可以通过 <code>arg0,arg1...</code> 或者 <code>param1,param2,...</code> 获取参数</p>
<h3 id="查询操作-查询总记录数" tabindex="-1"> 查询操作-查询总记录数</h3>
<ul>
<li>在 StudentDAO 接口中定义操作方法</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011608.png" alt="" loading="lazy"></p>
<ul>
<li>在 StudentMapper.xml 配置 sql，通过 resultType 指定当前操作的返回类型为 int</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011609.png" alt="" loading="lazy"></p>
<ul>
<li>单元测试</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011610.png" alt="" loading="lazy"></p>
<h3 id="添加操作回填生成的主键" tabindex="-1"> 添加操作回填生成的主键</h3>
<ul>
<li>StudentMapper.xml 的添加操作标签—— insert</li>
</ul>
<div data-ext="xml"><pre><code><span>&lt;!--useGeneratedKeys 设置添加操作是否需要回填生成的主键 keyProperty 设置回填的主键值赋值到参数对象的哪个属性--></span>
<span><span><span>&lt;</span>insert</span> <span>id</span><span><span>=</span><span>"</span>insertStudent<span>"</span></span> <span>parameterType</span><span><span>=</span><span>"</span>student<span>"</span></span> <span>useGeneratedKeys</span><span><span>=</span><span>"</span>true<span>"</span></span> <span>keyProperty</span><span><span>=</span><span>"</span>stuId<span>"</span></span><span>></span></span>
    insert into tb_students(stu_num, stu_name, stu_gender, stu_age)
    values (#{stuNum}, #{stuName}, #{stuGender}, #{stuAge})
<span><span><span>&lt;/</span>insert</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="mybatis-工具类封装" tabindex="-1"> MyBatis 工具类封装</h2>
<ul>
<li>MyBatisUtil</li>
</ul>
<div data-ext="java"><pre><code><span>package</span> <span>com<span>.</span>marico<span>.</span>utils</span><span>;</span>

<span>import</span> <span><span>org<span>.</span>apache<span>.</span>ibatis<span>.</span>io<span>.</span></span><span>Resources</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>apache<span>.</span>ibatis<span>.</span>session<span>.</span></span><span>SqlSession</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>apache<span>.</span>ibatis<span>.</span>session<span>.</span></span><span>SqlSessionFactory</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>apache<span>.</span>ibatis<span>.</span>session<span>.</span></span><span>SqlSessionFactoryBuilder</span></span><span>;</span>

<span>import</span> <span><span>java<span>.</span>io<span>.</span></span><span>File</span></span><span>;</span>
<span>import</span> <span><span>java<span>.</span>io<span>.</span></span><span>IOException</span></span><span>;</span>
<span>import</span> <span><span>java<span>.</span>io<span>.</span></span><span>InputStream</span></span><span>;</span>

<span>/**
 * @Author marico
 * @Date 2022/7/26 19:36
 * @PackageName:com.marico.utils
 * @ClassName: MyBatisUtil
 * @Description: TODO
 * @Version 1.0
 */</span>
<span>public</span> <span>class</span> <span>MyBatisUtil</span> <span>{</span>

    <span>private</span> <span>static</span> <span>SqlSessionFactory</span> sqlSessionFactory<span>;</span>

    <span>private</span> <span>static</span> <span>final</span> <span>ThreadLocal</span><span><span>&lt;</span><span>SqlSession</span><span>></span></span> local <span>=</span> <span>new</span> <span>ThreadLocal</span><span><span>&lt;</span><span>SqlSession</span><span>></span></span><span>(</span><span>)</span><span>;</span>
    <span>static</span> <span>{</span>
        <span>try</span> <span>{</span>
            <span>InputStream</span> is <span>=</span> <span>Resources</span><span>.</span><span>getResourceAsStream</span><span>(</span><span>"mybatis-config.xml"</span><span>)</span><span>;</span>
            sqlSessionFactory <span>=</span> <span>new</span> <span>SqlSessionFactoryBuilder</span><span>(</span><span>)</span><span>.</span><span>build</span><span>(</span>is<span>)</span><span>;</span>
        <span>}</span> <span>catch</span> <span>(</span><span>IOException</span> e<span>)</span> <span>{</span>
            e<span>.</span><span>printStackTrace</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>SqlSessionFactory</span> <span>getSqlSessionFactory</span><span>(</span><span>)</span><span>{</span>
        <span>return</span> sqlSessionFactory<span>;</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>SqlSession</span> <span>getSqlSession</span><span>(</span><span>)</span> <span>{</span>
        <span>SqlSession</span> sqlSession <span>=</span> local<span>.</span><span>get</span><span>(</span><span>)</span><span>;</span>
        <span>if</span> <span>(</span>sqlSession <span>==</span> <span>null</span><span>)</span><span>{</span>
            sqlSession <span>=</span> sqlSessionFactory<span>.</span><span>openSession</span><span>(</span><span>)</span><span>;</span>
            local<span>.</span><span>set</span><span>(</span>sqlSession<span>)</span><span>;</span>
        <span>}</span>
        <span>return</span> sqlSession<span>;</span>
    <span>}</span>

    <span>/*给无需 commit 的数据库操作提供*/</span>
    <span>public</span> <span>static</span> <span><span>&lt;</span><span>T</span> <span>extends</span> <span>Object</span><span>></span></span><span>T</span> <span>getMapper</span><span>(</span><span>Class</span><span><span>&lt;</span><span>T</span><span>></span></span> c<span>)</span><span>{</span>
        <span>SqlSession</span> sqlSession <span>=</span> <span>getSqlSession</span><span>(</span><span>)</span><span>;</span>
        <span>T</span> dao <span>=</span> sqlSession<span>.</span><span>getMapper</span><span>(</span>c<span>)</span><span>;</span>
        <span>return</span> dao<span>;</span>
    <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="事务管理" tabindex="-1"> 事务管理</h2>
<blockquote>
<p>SqlSession 对象</p>
</blockquote>
<ul>
<li>getMapper(DAO.class) : 获取 Mapper（DAO接口的实例）</li>
<li>事务管理</li>
</ul>
<h3 id="手动提交事务" tabindex="-1"> 手动提交事务</h3>
<ul>
<li><code>sqlSession.commit()</code>; 提交事务</li>
<li><code>sqlSession.rollback()</code>; 事务回滚</li>
</ul>
<p><strong>测试类中进行事务管理</strong></p>
<div data-ext="java"><pre><code><span>@Test</span>
<span>public</span> <span>void</span> <span>insertStudent</span><span>(</span><span>)</span> <span>{</span>
    <span>SqlSession</span> session <span>=</span> <span>MyBatisUtil</span><span>.</span><span>getSqlSession</span><span>(</span><span>)</span><span>;</span>
    <span>//1.当我们获取 SqlSession 对象时，就默认开启了事务</span>
    <span>try</span> <span>{</span>
        <span>//通过会话回去 Dao 对象</span>
        <span>StudentDao</span> studentDao <span>=</span> session<span>.</span><span>getMapper</span><span>(</span><span>StudentDao</span><span>.</span><span>class</span><span>)</span><span>;</span>
        <span>//测试 StudentDao 中的方法</span>
        <span>Student</span> student <span>=</span> <span>new</span> <span>Student</span><span>(</span><span>null</span><span>,</span> <span>"122"</span><span>,</span> <span>"康辉"</span><span>,</span> <span>"男"</span><span>,</span> <span>50</span><span>)</span><span>;</span>
        <span>int</span> result <span>=</span> studentDao<span>.</span><span>insertStudent</span><span>(</span>student<span>)</span><span>;</span>
        <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span><span>"result = "</span> <span>+</span> result<span>)</span><span>;</span>
        <span>//主键回填</span>
        <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span>student<span>)</span><span>;</span>
        <span>//2.操作完成并成功后，需要手动提交</span>
        session<span>.</span><span>commit</span><span>(</span><span>)</span><span>;</span>
    <span>}</span> <span>catch</span> <span>(</span><span>Exception</span> e<span>)</span> <span>{</span>
        <span>//3.当操作出现异常，调用 rollback 进行回滚</span>
        session<span>.</span><span>rollback</span><span>(</span><span>)</span><span>;</span>
    <span>}</span>

<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><strong>业务逻辑层手动事务管理</strong></p>
<div data-ext="java"><pre><code><span>public</span> <span>class</span> <span>StudentServiceImpl</span> <span>implements</span> <span>StudentService</span> <span>{</span>
    <span>public</span> <span>boolean</span> <span>addStudent</span><span>(</span><span>Student</span> student<span>)</span> <span>{</span>
        <span>boolean</span> b <span>=</span> <span>false</span><span>;</span>
        <span>SqlSession</span> sqlSession <span>=</span> <span>MyBatisUtil</span><span>.</span><span>getSqlSession</span><span>(</span><span>)</span><span>;</span>
        <span>try</span><span>{</span>
            <span>StudentDAO</span> studentDAO <span>=</span> sqlSession<span>.</span><span>getMapper</span><span>(</span><span>StudentDAO</span><span>.</span><span>class</span><span>)</span><span>;</span>
            <span>int</span> i <span>=</span> studentDAO<span>.</span><span>insertStudent</span><span>(</span>student<span>)</span><span>;</span>
            b <span>=</span> i<span>></span><span>0</span><span>;</span>
            sqlSession<span>.</span><span>commit</span><span>(</span><span>)</span><span>;</span>
        <span>}</span><span>catch</span> <span>(</span><span>Exception</span> e<span>)</span><span>{</span>
            sqlSession<span>.</span><span>rollback</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
        <span>return</span> b<span>;</span>
    <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="自动提交事务" tabindex="-1"> 自动提交事务</h3>
<blockquote>
<p>通过 SqlSessionFactory 调用 openSession 方法获取 SqlSession 对象时，可以通过参数设置事务是否自动提交：</p>
<ul>
<li>如果参数设置为 true，表示自动提交事务： factory.openSession(true);</li>
<li>如果参数设置为 false，或者不设置参数，表示手动提交；</li>
</ul>
</blockquote>
<p><strong>factory.openSession();/factory.openSession(false);</strong></p>
<p><strong>MyBatisUtil 优化</strong></p>
<div data-ext="java"><pre><code><span>package</span> <span>com<span>.</span>marico<span>.</span>utils</span><span>;</span>

<span>import</span> <span><span>org<span>.</span>apache<span>.</span>ibatis<span>.</span>io<span>.</span></span><span>Resources</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>apache<span>.</span>ibatis<span>.</span>session<span>.</span></span><span>SqlSession</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>apache<span>.</span>ibatis<span>.</span>session<span>.</span></span><span>SqlSessionFactory</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>apache<span>.</span>ibatis<span>.</span>session<span>.</span></span><span>SqlSessionFactoryBuilder</span></span><span>;</span>

<span>import</span> <span><span>java<span>.</span>io<span>.</span></span><span>File</span></span><span>;</span>
<span>import</span> <span><span>java<span>.</span>io<span>.</span></span><span>IOException</span></span><span>;</span>
<span>import</span> <span><span>java<span>.</span>io<span>.</span></span><span>InputStream</span></span><span>;</span>

<span>/**
 * @Author marico
 * @Date 2022/7/26 19:36
 * @PackageName:com.marico.utils
 * @ClassName: MyBatisUtil
 * @Description: TODO
 * @Version 1.0
 */</span>
<span>public</span> <span>class</span> <span>MyBatisUtil</span> <span>{</span>

    <span>private</span> <span>static</span> <span>SqlSessionFactory</span> sqlSessionFactory<span>;</span>

    <span>private</span> <span>static</span> <span>final</span> <span>ThreadLocal</span><span><span>&lt;</span><span>SqlSession</span><span>></span></span> local <span>=</span> <span>new</span> <span>ThreadLocal</span><span><span>&lt;</span><span>SqlSession</span><span>></span></span><span>(</span><span>)</span><span>;</span>
    <span>static</span> <span>{</span>
        <span>try</span> <span>{</span>
            <span>InputStream</span> is <span>=</span> <span>Resources</span><span>.</span><span>getResourceAsStream</span><span>(</span><span>"mybatis-config.xml"</span><span>)</span><span>;</span>
            sqlSessionFactory <span>=</span> <span>new</span> <span>SqlSessionFactoryBuilder</span><span>(</span><span>)</span><span>.</span><span>build</span><span>(</span>is<span>)</span><span>;</span>
        <span>}</span> <span>catch</span> <span>(</span><span>IOException</span> e<span>)</span> <span>{</span>
            e<span>.</span><span>printStackTrace</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>SqlSessionFactory</span> <span>getSqlSessionFactory</span><span>(</span><span>)</span><span>{</span>
        <span>return</span> sqlSessionFactory<span>;</span>
    <span>}</span>

    <span>/**
     * 
     * <span>@param</span> <span>isAutoCommit</span> 是否自动事务提交
     * <span>@return</span>
     */</span>
    <span>public</span> <span>static</span> <span>SqlSession</span> <span>getSqlSession</span><span>(</span><span>boolean</span> isAutoCommit<span>)</span> <span>{</span>
        <span>SqlSession</span> sqlSession <span>=</span> local<span>.</span><span>get</span><span>(</span><span>)</span><span>;</span>
        <span>if</span> <span>(</span>sqlSession <span>==</span> <span>null</span><span>)</span><span>{</span>
            sqlSession <span>=</span> sqlSessionFactory<span>.</span><span>openSession</span><span>(</span>isAutoCommit<span>)</span><span>;</span>  <span>//设置事务是否自动提交</span>
            local<span>.</span><span>set</span><span>(</span>sqlSession<span>)</span><span>;</span>
        <span>}</span>
        <span>return</span> sqlSession<span>;</span>
    <span>}</span>

    <span>//手动事务管理</span>
    <span>public</span> <span>static</span> <span>SqlSession</span> <span>getSqlSession</span><span>(</span><span>)</span><span>{</span>
        <span>return</span> <span>getSqlSession</span><span>(</span><span>false</span><span>)</span><span>;</span>
    <span>}</span>

    <span>//自动事务提交</span>
    <span>public</span> <span>static</span> <span><span>&lt;</span><span>T</span> <span>extends</span> <span>Object</span><span>></span></span><span>T</span> <span>getMapper</span><span>(</span><span>Class</span><span><span>&lt;</span><span>T</span><span>></span></span> c<span>)</span><span>{</span>
        <span>SqlSession</span> sqlSession <span>=</span> <span>getSqlSession</span><span>(</span><span>true</span><span>)</span><span>;</span>
        <span>T</span> dao <span>=</span> sqlSession<span>.</span><span>getMapper</span><span>(</span>c<span>)</span><span>;</span>
        <span>return</span> dao<span>;</span>
    <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><strong>测试操作</strong></p>
<div data-ext="java"><pre><code><span>@Test</span>
<span>public</span> <span>void</span> <span>testDeleteStudent</span><span>(</span><span>)</span> <span>{</span>
    <span>StudentDao</span> studentDao <span>=</span> <span>MyBatisUtil</span><span>.</span><span>getMapper</span><span>(</span><span>StudentDao</span><span>.</span><span>class</span><span>)</span><span>;</span>
    <span>int</span> i <span>=</span> studentDao<span>.</span><span>deleteStudent</span><span>(</span><span>"12"</span><span>)</span><span>;</span>
    <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span>i<span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><strong>业务逻辑层自动事务管理</strong></p>
<div data-ext="java"><pre><code><span>public</span> <span>class</span> <span>StudentServiceImpl</span> <span>implements</span> <span>StudentService</span> <span>{</span>
    <span>private</span> <span>StudentDAO</span> studentDAO <span>=</span> <span>MyBatisUtil</span><span>.</span><span>getMapper</span><span>(</span><span>StudentDAO</span><span>.</span><span>class</span><span>)</span><span>;</span>
    <span>public</span> <span>boolean</span> <span>addStudent</span><span>(</span><span>Student</span> student<span>)</span> <span>{</span>
        <span>int</span> i <span>=</span> studentDAO<span>.</span><span>insertStudent</span><span>(</span>student<span>)</span><span>;</span>
        <span>boolean</span> b <span>=</span> i<span>></span><span>0</span><span>;</span>
        <span>return</span> b<span>;</span>
    <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="mybatis-主配置文件" tabindex="-1"> MyBatis 主配置文件</h2>
<blockquote>
<p>mybatis-config.xml 是 MyBatis 框架的主配置文件，只要用于配置 MyBatis 数据源及属性信息</p>
</blockquote>
<h3 id="properties-标签" tabindex="-1"> properties 标签</h3>
<blockquote>
<p>用于设置键值对，或者加载属性文件</p>
</blockquote>
<ul>
<li>在 resources 目录下创建 <code>jdbc.properties</code> 文件，配置键值对如下：</li>
</ul>
<div data-ext="properties"><pre><code><span>mysql_driver</span><span>=</span><span>com.mysql.cj.jdbc.Driver</span>
<span>mysql_url</span><span>=</span><span>jdbc:mysql://localhost:3306/jdbc?characterEncoding=utf-8&amp;useUnicode=true</span>
<span>mysql_username</span><span>=</span><span>root</span>
<span>mysql_password</span><span>=</span><span>240518.a</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><ul>
<li>在 <code>mybatis-config.xml</code> 中通过 properties 标签引用 <code>jdbc.properties</code> 文件;引入之后，在配置environment 时可以直接使用 jdbc.properties 的 key 获取对应的 value
| mybatis-config.xml |
| --- |
| <img src="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011611.png" alt="" loading="lazy"> |</li>
</ul>
<h3 id="settings-标签" tabindex="-1"> settings 标签</h3>
<div data-ext="xml"><pre><code><span>&lt;!--设置 mybatis 的属性--></span>
<span><span><span>&lt;</span>settings</span><span>></span></span>
    <span>&lt;!-- 启动⼆级缓存--></span>
    <span><span><span>&lt;</span>setting</span> <span>name</span><span><span>=</span><span>"</span>cacheEnabled<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>true<span>"</span></span><span>/></span></span>
    <span>&lt;!-- 启动延迟加载 --></span>
    <span><span><span>&lt;</span>setting</span> <span>name</span><span><span>=</span><span>"</span>lazyLoadingEnabled<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>true<span>"</span></span><span>/></span></span>
<span><span><span>&lt;/</span>settings</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="typealiases-标签" tabindex="-1"> typeAliases 标签</h3>
<div data-ext="xml"><pre><code><span>&lt;!-- typeAliases 标签用于给实体类取别名，在映射文件中可以直接使用别名来替代实体类的全限定名--></span>
<span><span><span>&lt;</span>typeAliases</span><span>></span></span>
    <span><span><span>&lt;</span>typeAlias</span> <span>type</span><span><span>=</span><span>"</span>com.marico.pojo.Student<span>"</span></span> <span>alias</span><span><span>=</span><span>"</span>Student<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>typeAlias</span><span>></span></span>
    <span><span><span>&lt;</span>typeAlias</span> <span>type</span><span><span>=</span><span>"</span>com.marico.pojo.Book<span>"</span></span> <span>alias</span><span><span>=</span><span>"</span>Book<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>typeAlias</span><span>></span></span>
&lt;/typeAliases
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="plugins-标签" tabindex="-1"> plugins 标签</h3>
<div data-ext="xml"><pre><code><span>&lt;!-- plugins 标签，用于配置 MyBatis 插件（分页插件）--></span>
<span><span><span>&lt;</span>plugins</span><span>></span></span>
    <span><span><span>&lt;</span>plugin</span> <span>interceptor</span><span><span>=</span><span>"</span><span>"</span></span><span>></span></span><span><span><span>&lt;/</span>plugin</span><span>></span></span>
<span><span><span>&lt;/</span>plugins</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="environments-标签" tabindex="-1"> environments 标签</h3>
<div data-ext="xml"><pre><code><span>&lt;!-- 在 environments 配置数据库连接信息 --></span>
<span>&lt;!-- 在 environments 标签中可以定义多个 environment 标签，每个 environment 标签可以定义⼀套连接配置 --></span>
<span>&lt;!-- default 属性，用来指定使用哪个 environment 标签 --></span>
<span><span><span>&lt;</span>environments</span> <span>default</span><span><span>=</span><span>"</span>mysql<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>environment</span> <span>id</span><span><span>=</span><span>"</span>mysql<span>"</span></span><span>></span></span>
        <span>&lt;!--transactionManager 标签用于配置数据库管理方式
            type="JDBC" 可以进⾏事务的提交和回滚操作
            type="MANAGED" 依赖容器完成事务管理，本身不进行事务的提交和回滚操作 --></span>
        <span><span><span>&lt;</span>transactionManager</span> <span>type</span><span><span>=</span><span>"</span>JDBC<span>"</span></span><span>/></span></span>
        <span>&lt;!--dataSource 标签就是用来配置数据库连接信息  POOLED|UNPOOLED--></span>
        <span><span><span>&lt;</span>dataSource</span> <span>type</span><span><span>=</span><span>"</span>POOLED<span>"</span></span><span>></span></span>
            <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>driver<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>${mysql_driver}<span>"</span></span><span>/></span></span>
            <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>url<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>${mysql_url}<span>"</span></span><span>/></span></span>
            <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>username<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>${mysql_username}<span>"</span></span><span>/></span></span>
            <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>password<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>${mysql_password}<span>"</span></span><span>/></span></span>
        <span><span><span>&lt;/</span>dataSource</span><span>></span></span>
    <span><span><span>&lt;/</span>environment</span><span>></span></span>
<span><span><span>&lt;/</span>environments</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="mappers-标签" tabindex="-1"> mappers 标签</h3>
<blockquote>
<p>加载映射配置（映射文件、DAO注解）</p>
</blockquote>
<div data-ext="xml"><pre><code><span>&lt;!--mappers 标签用于载入映射文件--></span>
<span><span><span>&lt;</span>mappers</span><span>></span></span>
    <span><span><span>&lt;</span>mapper</span> <span>resource</span><span><span>=</span><span>"</span>mappers/StudentDao.xml<span>"</span></span><span>/></span></span>
<span><span><span>&lt;/</span>mappers</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h2 id="映射文件" tabindex="-1"> 映射文件</h2>
<h3 id="mybatismapper-初始化" tabindex="-1"> MyBatisMapper 初始化</h3>
<blockquote>
<p>XML 文件解析：读取 xml 文件中的标签配置封装到 Java 对象中</p>
</blockquote>
<p>![](<a href="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/%E6%9C%AA%E5%91%BD%E5%90%8D%E7%BB%98%E5%9B%BE.drawio" target="_blank" rel="noopener noreferrer">https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/未命名绘图.drawio</a> (62).png)</p>
<h3 id="mapper-根标签" tabindex="-1"> mapper 根标签</h3>
<blockquote>
<p>mapper 文件相当于 DAO 接口的'实现类'，namespace 属性要指定实现 DAO 接口的全限定名</p>
</blockquote>
<h3 id="insert-标签" tabindex="-1"> insert 标签</h3>
<blockquote>
<p>声明添加操作（sql: insert ...）</p>
</blockquote>
<p><strong>常用属性</strong></p>
<ul>
<li>
<p>id 属性，绑定对应 DAO 接口中的方法</p>
</li>
<li>
<p>parameterType 属性，用以指定接口中对应方法的参数类型（可省略）</p>
</li>
<li>
<p>useGeneratedKeys 属性， 设置添加操作是否需要回填生成的主键</p>
</li>
<li>
<p>keyProperty 属性，指定回填的id设置到参数对象中的哪个属性</p>
</li>
<li>
<p>timeout 属性，设置此操作的超时时间，如果不设置则⼀直等待</p>
</li>
</ul>
<p><strong>主键回填</strong></p>
<p><strong>方式一：</strong></p>
<div data-ext="xml"><pre><code><span>&lt;!--useGeneratedKeys 设置添加操作是否需要回填生成的主键 keyProperty 设置回填的主键值赋值到参数对象的哪个属性--></span>
<span><span><span>&lt;</span>insert</span> <span>id</span><span><span>=</span><span>"</span>insertStudent<span>"</span></span> <span>parameterType</span><span><span>=</span><span>"</span>student<span>"</span></span> <span>useGeneratedKeys</span><span><span>=</span><span>"</span>true<span>"</span></span> <span>keyProperty</span><span><span>=</span><span>"</span>stuId<span>"</span></span><span>></span></span>
    insert into tb_students(stu_num, stu_name, stu_gender, stu_age)
    values (#{stuNum}, #{stuName}, #{stuGender}, #{stuAge})
<span><span><span>&lt;/</span>insert</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p><strong>方式二：</strong></p>
<div data-ext="xml"><pre><code><span><span><span>&lt;</span>insert</span> <span>id</span><span><span>=</span><span>"</span>insertStudent<span>"</span></span> <span>parameterType</span><span><span>=</span><span>"</span>student<span>"</span></span> <span>useGeneratedKeys</span><span><span>=</span><span>"</span>true<span>"</span></span> <span>keyProperty</span><span><span>=</span><span>"</span>stuId<span>"</span></span> <span>timeout</span><span><span>=</span><span>"</span>3000<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>selectKey</span> <span>keyProperty</span><span><span>=</span><span>"</span>stuId<span>"</span></span> <span>resultType</span><span><span>=</span><span>"</span>java.lang.Integer<span>"</span></span><span>></span></span> <span>&lt;!--resultType 回填值的类型--></span>
        select last_insert_id()
    <span><span><span>&lt;/</span>selectKey</span><span>></span></span>
    insert into tb_students(stu_num, stu_name, stu_gender, stu_age)
    values (#{stuNum}, #{stuName}, #{stuGender}, #{stuAge})
<span><span><span>&lt;/</span>insert</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="delete-标签" tabindex="-1"> delete 标签</h3>
<blockquote>
<p>声明删除操作</p>
</blockquote>
<h3 id="update-标签" tabindex="-1"> update 标签</h3>
<blockquote>
<p>声明修改操作</p>
</blockquote>
<h3 id="select-标签" tabindex="-1"> select 标签</h3>
<blockquote>
<p>声明查询操作</p>
</blockquote>
<ul>
<li>id 属性， 指定绑定方法的方法名</li>
<li>parameterType 属性，设置参数类型</li>
<li>resultType 属性，指定当前 sql 返回数据封装的对象类型（实体类）</li>
<li>resultMap 属性，指定从数据表到实体类的字段和属性的对应关系</li>
<li>useCache 属性，指定此查询操作是否需要缓存</li>
<li>timeout 属性，设置超时时间</li>
</ul>
<h3 id="resultmap-标签" tabindex="-1"> resultMap 标签</h3>
<div data-ext="xml"><pre><code><span>&lt;!-- resultMap 标签用于定义实体类与数据表的映射关系（ORM） --></span>
<span><span><span>&lt;</span>resultMap</span> <span>id</span><span><span>=</span><span>"</span>studentMap<span>"</span></span> <span>type</span><span><span>=</span><span>"</span>Student<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>id</span> <span>column</span><span><span>=</span><span>"</span>sid<span>"</span></span> <span>property</span><span><span>=</span><span>"</span>stuId<span>"</span></span><span>/></span></span>
    <span><span><span>&lt;</span>result</span> <span>column</span><span><span>=</span><span>"</span>stu_num<span>"</span></span> <span>property</span><span><span>=</span><span>"</span>stuNum<span>"</span></span><span>/></span></span>
    <span><span><span>&lt;</span>result</span> <span>column</span><span><span>=</span><span>"</span>stu_name<span>"</span></span> <span>property</span><span><span>=</span><span>"</span>stuName<span>"</span></span><span>/></span></span>
    <span><span><span>&lt;</span>result</span> <span>column</span><span><span>=</span><span>"</span>stu_gender<span>"</span></span> <span>property</span><span><span>=</span><span>"</span>stuGender<span>"</span></span><span>/></span></span>
    <span><span><span>&lt;</span>result</span> <span>column</span><span><span>=</span><span>"</span>stu_age<span>"</span></span> <span>property</span><span><span>=</span><span>"</span>stuAge<span>"</span></span><span>/></span></span>
<span><span><span>&lt;/</span>resultMap</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="cache-标签" tabindex="-1"> cache 标签</h3>
<blockquote>
<p>设置当前 DAO 进行数据库操作时的缓存属性设置</p>
</blockquote>
<div data-ext="xml"><pre><code><span><span><span>&lt;</span>cache</span> <span>type</span><span><span>=</span><span>"</span><span>"</span></span> <span>size</span><span><span>=</span><span>"</span><span>"</span></span> <span>readOnly</span><span><span>=</span><span>"</span>false<span>"</span></span><span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="sql-和-include" tabindex="-1"> sql 和 include</h3>
<blockquote>
<p>SQL 片段</p>
</blockquote>
<div data-ext="xml"><pre><code><span><span><span>&lt;</span>sql</span> <span>id</span><span><span>=</span><span>"</span>wanglaoji<span>"</span></span><span>></span></span>sid , stu_num , stu_name , stu_gender , stu_age<span><span><span>&lt;/</span>sql</span><span>></span></span>
<span><span><span>&lt;</span>select</span> <span>id</span><span><span>=</span><span>"</span>listStudents<span>"</span></span> <span>resultMap</span><span><span>=</span><span>"</span>studentMap<span>"</span></span><span>></span></span>
    select <span><span><span>&lt;</span>include</span> <span>refid</span><span><span>=</span><span>"</span>wanglaoji<span>"</span></span><span>/></span></span> from tb_students
<span><span><span>&lt;/</span>select</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/shenzehui/CDN/img/202210051011047.png" type="image/png"/>
    </item>
  </channel>
</rss>